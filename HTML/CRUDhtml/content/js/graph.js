/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 48.0, "minX": 0.0, "maxY": 9590.0, "series": [{"data": [[0.0, 48.0], [0.1, 48.0], [0.2, 55.0], [0.3, 55.0], [0.4, 62.0], [0.5, 62.0], [0.6, 65.0], [0.7, 68.0], [0.8, 68.0], [0.9, 70.0], [1.0, 70.0], [1.1, 70.0], [1.2, 70.0], [1.3, 81.0], [1.4, 87.0], [1.5, 87.0], [1.6, 93.0], [1.7, 93.0], [1.8, 94.0], [1.9, 94.0], [2.0, 96.0], [2.1, 114.0], [2.2, 114.0], [2.3, 114.0], [2.4, 114.0], [2.5, 115.0], [2.6, 115.0], [2.7, 126.0], [2.8, 131.0], [2.9, 131.0], [3.0, 134.0], [3.1, 134.0], [3.2, 137.0], [3.3, 137.0], [3.4, 138.0], [3.5, 145.0], [3.6, 145.0], [3.7, 147.0], [3.8, 147.0], [3.9, 147.0], [4.0, 147.0], [4.1, 147.0], [4.2, 150.0], [4.3, 150.0], [4.4, 154.0], [4.5, 154.0], [4.6, 156.0], [4.7, 156.0], [4.8, 158.0], [4.9, 159.0], [5.0, 159.0], [5.1, 161.0], [5.2, 161.0], [5.3, 163.0], [5.4, 163.0], [5.5, 166.0], [5.6, 169.0], [5.7, 169.0], [5.8, 182.0], [5.9, 182.0], [6.0, 185.0], [6.1, 185.0], [6.2, 190.0], [6.3, 192.0], [6.4, 192.0], [6.5, 195.0], [6.6, 195.0], [6.7, 197.0], [6.8, 197.0], [6.9, 223.0], [7.0, 227.0], [7.1, 227.0], [7.2, 234.0], [7.3, 234.0], [7.4, 248.0], [7.5, 248.0], [7.6, 285.0], [7.7, 287.0], [7.8, 287.0], [7.9, 361.0], [8.0, 361.0], [8.1, 367.0], [8.2, 367.0], [8.3, 389.0], [8.4, 397.0], [8.5, 397.0], [8.6, 400.0], [8.7, 400.0], [8.8, 404.0], [8.9, 404.0], [9.0, 407.0], [9.1, 424.0], [9.2, 424.0], [9.3, 428.0], [9.4, 428.0], [9.5, 435.0], [9.6, 435.0], [9.7, 435.0], [9.8, 456.0], [9.9, 456.0], [10.0, 470.0], [10.1, 470.0], [10.2, 474.0], [10.3, 474.0], [10.4, 484.0], [10.5, 500.0], [10.6, 500.0], [10.7, 514.0], [10.8, 514.0], [10.9, 553.0], [11.0, 553.0], [11.1, 561.0], [11.2, 678.0], [11.3, 678.0], [11.4, 722.0], [11.5, 722.0], [11.6, 740.0], [11.7, 740.0], [11.8, 810.0], [11.9, 856.0], [12.0, 856.0], [12.1, 906.0], [12.2, 906.0], [12.3, 925.0], [12.4, 925.0], [12.5, 973.0], [12.6, 1003.0], [12.7, 1003.0], [12.8, 1025.0], [12.9, 1025.0], [13.0, 1044.0], [13.1, 1044.0], [13.2, 1048.0], [13.3, 1056.0], [13.4, 1056.0], [13.5, 1070.0], [13.6, 1070.0], [13.7, 1072.0], [13.8, 1072.0], [13.9, 1096.0], [14.0, 1112.0], [14.1, 1112.0], [14.2, 1112.0], [14.3, 1112.0], [14.4, 1122.0], [14.5, 1122.0], [14.6, 1129.0], [14.7, 1154.0], [14.8, 1154.0], [14.9, 1170.0], [15.0, 1170.0], [15.1, 1171.0], [15.2, 1171.0], [15.3, 1173.0], [15.4, 1188.0], [15.5, 1188.0], [15.6, 1189.0], [15.7, 1189.0], [15.8, 1198.0], [15.9, 1198.0], [16.0, 1218.0], [16.1, 1220.0], [16.2, 1220.0], [16.3, 1243.0], [16.4, 1243.0], [16.5, 1245.0], [16.6, 1245.0], [16.7, 1253.0], [16.8, 1263.0], [16.9, 1263.0], [17.0, 1272.0], [17.1, 1272.0], [17.2, 1285.0], [17.3, 1285.0], [17.4, 1291.0], [17.5, 1294.0], [17.6, 1294.0], [17.7, 1299.0], [17.8, 1299.0], [17.9, 1312.0], [18.0, 1312.0], [18.1, 1324.0], [18.2, 1325.0], [18.3, 1325.0], [18.4, 1326.0], [18.5, 1326.0], [18.6, 1328.0], [18.7, 1328.0], [18.8, 1329.0], [18.9, 1342.0], [19.0, 1342.0], [19.1, 1357.0], [19.2, 1357.0], [19.3, 1365.0], [19.4, 1365.0], [19.5, 1367.0], [19.6, 1369.0], [19.7, 1369.0], [19.8, 1370.0], [19.9, 1370.0], [20.0, 1373.0], [20.1, 1373.0], [20.2, 1378.0], [20.3, 1378.0], [20.4, 1378.0], [20.5, 1381.0], [20.6, 1381.0], [20.7, 1387.0], [20.8, 1387.0], [20.9, 1397.0], [21.0, 1397.0], [21.1, 1397.0], [21.2, 1400.0], [21.3, 1400.0], [21.4, 1400.0], [21.5, 1400.0], [21.6, 1409.0], [21.7, 1412.0], [21.8, 1412.0], [21.9, 1414.0], [22.0, 1414.0], [22.1, 1419.0], [22.2, 1419.0], [22.3, 1420.0], [22.4, 1423.0], [22.5, 1423.0], [22.6, 1427.0], [22.7, 1427.0], [22.8, 1431.0], [22.9, 1431.0], [23.0, 1434.0], [23.1, 1434.0], [23.2, 1434.0], [23.3, 1435.0], [23.4, 1435.0], [23.5, 1446.0], [23.6, 1446.0], [23.7, 1447.0], [23.8, 1450.0], [23.9, 1450.0], [24.0, 1453.0], [24.1, 1453.0], [24.2, 1456.0], [24.3, 1456.0], [24.4, 1465.0], [24.5, 1468.0], [24.6, 1468.0], [24.7, 1470.0], [24.8, 1470.0], [24.9, 1473.0], [25.0, 1481.0], [25.1, 1481.0], [25.2, 1484.0], [25.3, 1484.0], [25.4, 1486.0], [25.5, 1486.0], [25.6, 1499.0], [25.7, 1505.0], [25.8, 1505.0], [25.9, 1509.0], [26.0, 1509.0], [26.1, 1509.0], [26.2, 1509.0], [26.3, 1516.0], [26.4, 1528.0], [26.5, 1528.0], [26.6, 1533.0], [26.7, 1533.0], [26.8, 1537.0], [26.9, 1537.0], [27.0, 1539.0], [27.1, 1539.0], [27.2, 1539.0], [27.3, 1544.0], [27.4, 1544.0], [27.5, 1545.0], [27.6, 1545.0], [27.7, 1546.0], [27.8, 1555.0], [27.9, 1555.0], [28.0, 1560.0], [28.1, 1560.0], [28.2, 1562.0], [28.3, 1562.0], [28.4, 1575.0], [28.5, 1575.0], [28.6, 1575.0], [28.7, 1579.0], [28.8, 1579.0], [28.9, 1586.0], [29.0, 1586.0], [29.1, 1590.0], [29.2, 1592.0], [29.3, 1592.0], [29.4, 1599.0], [29.5, 1599.0], [29.6, 1606.0], [29.7, 1606.0], [29.8, 1612.0], [29.9, 1617.0], [30.0, 1617.0], [30.1, 1620.0], [30.2, 1620.0], [30.3, 1628.0], [30.4, 1628.0], [30.5, 1629.0], [30.6, 1640.0], [30.7, 1640.0], [30.8, 1640.0], [30.9, 1640.0], [31.0, 1642.0], [31.1, 1642.0], [31.2, 1643.0], [31.3, 1643.0], [31.4, 1643.0], [31.5, 1646.0], [31.6, 1646.0], [31.7, 1647.0], [31.8, 1647.0], [31.9, 1648.0], [32.0, 1650.0], [32.1, 1650.0], [32.2, 1653.0], [32.3, 1653.0], [32.4, 1664.0], [32.5, 1664.0], [32.6, 1670.0], [32.7, 1684.0], [32.8, 1684.0], [32.9, 1689.0], [33.0, 1689.0], [33.1, 1695.0], [33.2, 1695.0], [33.3, 1697.0], [33.4, 1698.0], [33.5, 1698.0], [33.6, 1699.0], [33.7, 1699.0], [33.8, 1701.0], [33.9, 1701.0], [34.0, 1708.0], [34.1, 1716.0], [34.2, 1716.0], [34.3, 1719.0], [34.4, 1719.0], [34.5, 1724.0], [34.6, 1724.0], [34.7, 1732.0], [34.8, 1744.0], [34.9, 1744.0], [35.0, 1752.0], [35.1, 1752.0], [35.2, 1754.0], [35.3, 1754.0], [35.4, 1763.0], [35.5, 1770.0], [35.6, 1770.0], [35.7, 1786.0], [35.8, 1786.0], [35.9, 1786.0], [36.0, 1786.0], [36.1, 1788.0], [36.2, 1793.0], [36.3, 1793.0], [36.4, 1799.0], [36.5, 1799.0], [36.6, 1805.0], [36.7, 1805.0], [36.8, 1806.0], [36.9, 1820.0], [37.0, 1820.0], [37.1, 1822.0], [37.2, 1822.0], [37.3, 1827.0], [37.4, 1827.0], [37.5, 1828.0], [37.6, 1834.0], [37.7, 1834.0], [37.8, 1835.0], [37.9, 1835.0], [38.0, 1837.0], [38.1, 1837.0], [38.2, 1862.0], [38.3, 1868.0], [38.4, 1868.0], [38.5, 1873.0], [38.6, 1873.0], [38.7, 1876.0], [38.8, 1876.0], [38.9, 1878.0], [39.0, 1890.0], [39.1, 1890.0], [39.2, 1892.0], [39.3, 1892.0], [39.4, 1894.0], [39.5, 1894.0], [39.6, 1901.0], [39.7, 1905.0], [39.8, 1905.0], [39.9, 1923.0], [40.0, 1923.0], [40.1, 1928.0], [40.2, 1928.0], [40.3, 1933.0], [40.4, 1940.0], [40.5, 1940.0], [40.6, 1948.0], [40.7, 1948.0], [40.8, 1960.0], [40.9, 1960.0], [41.0, 1964.0], [41.1, 1966.0], [41.2, 1966.0], [41.3, 1971.0], [41.4, 1971.0], [41.5, 1974.0], [41.6, 1974.0], [41.7, 1975.0], [41.8, 1977.0], [41.9, 1977.0], [42.0, 1984.0], [42.1, 1984.0], [42.2, 1985.0], [42.3, 1985.0], [42.4, 1986.0], [42.5, 1988.0], [42.6, 1988.0], [42.7, 1993.0], [42.8, 1993.0], [42.9, 1995.0], [43.0, 1995.0], [43.1, 1997.0], [43.2, 2001.0], [43.3, 2001.0], [43.4, 2002.0], [43.5, 2002.0], [43.6, 2016.0], [43.7, 2016.0], [43.8, 2023.0], [43.9, 2026.0], [44.0, 2026.0], [44.1, 2027.0], [44.2, 2027.0], [44.3, 2030.0], [44.4, 2030.0], [44.5, 2035.0], [44.6, 2040.0], [44.7, 2040.0], [44.8, 2041.0], [44.9, 2041.0], [45.0, 2042.0], [45.1, 2042.0], [45.2, 2045.0], [45.3, 2059.0], [45.4, 2059.0], [45.5, 2061.0], [45.6, 2061.0], [45.7, 2065.0], [45.8, 2065.0], [45.9, 2067.0], [46.0, 2070.0], [46.1, 2070.0], [46.2, 2071.0], [46.3, 2071.0], [46.4, 2074.0], [46.5, 2074.0], [46.6, 2077.0], [46.7, 2080.0], [46.8, 2080.0], [46.9, 2085.0], [47.0, 2085.0], [47.1, 2117.0], [47.2, 2117.0], [47.3, 2122.0], [47.4, 2132.0], [47.5, 2132.0], [47.6, 2145.0], [47.7, 2145.0], [47.8, 2145.0], [47.9, 2145.0], [48.0, 2166.0], [48.1, 2178.0], [48.2, 2178.0], [48.3, 2193.0], [48.4, 2193.0], [48.5, 2196.0], [48.6, 2196.0], [48.7, 2197.0], [48.8, 2201.0], [48.9, 2201.0], [49.0, 2206.0], [49.1, 2206.0], [49.2, 2216.0], [49.3, 2216.0], [49.4, 2219.0], [49.5, 2228.0], [49.6, 2228.0], [49.7, 2238.0], [49.8, 2238.0], [49.9, 2250.0], [50.0, 2253.0], [50.1, 2253.0], [50.2, 2260.0], [50.3, 2260.0], [50.4, 2263.0], [50.5, 2263.0], [50.6, 2284.0], [50.7, 2291.0], [50.8, 2291.0], [50.9, 2308.0], [51.0, 2308.0], [51.1, 2313.0], [51.2, 2313.0], [51.3, 2320.0], [51.4, 2328.0], [51.5, 2328.0], [51.6, 2345.0], [51.7, 2345.0], [51.8, 2345.0], [51.9, 2345.0], [52.0, 2358.0], [52.1, 2359.0], [52.2, 2359.0], [52.3, 2364.0], [52.4, 2364.0], [52.5, 2366.0], [52.6, 2366.0], [52.7, 2368.0], [52.8, 2369.0], [52.9, 2369.0], [53.0, 2394.0], [53.1, 2394.0], [53.2, 2396.0], [53.3, 2396.0], [53.4, 2398.0], [53.5, 2401.0], [53.6, 2401.0], [53.7, 2407.0], [53.8, 2407.0], [53.9, 2409.0], [54.0, 2409.0], [54.1, 2411.0], [54.2, 2414.0], [54.3, 2414.0], [54.4, 2427.0], [54.5, 2427.0], [54.6, 2429.0], [54.7, 2429.0], [54.8, 2437.0], [54.9, 2445.0], [55.0, 2445.0], [55.1, 2449.0], [55.2, 2449.0], [55.3, 2451.0], [55.4, 2451.0], [55.5, 2451.0], [55.6, 2452.0], [55.7, 2452.0], [55.8, 2457.0], [55.9, 2457.0], [56.0, 2463.0], [56.1, 2463.0], [56.2, 2464.0], [56.3, 2465.0], [56.4, 2465.0], [56.5, 2469.0], [56.6, 2469.0], [56.7, 2472.0], [56.8, 2472.0], [56.9, 2476.0], [57.0, 2478.0], [57.1, 2478.0], [57.2, 2482.0], [57.3, 2482.0], [57.4, 2489.0], [57.5, 2489.0], [57.6, 2492.0], [57.7, 2492.0], [57.8, 2492.0], [57.9, 2499.0], [58.0, 2499.0], [58.1, 2503.0], [58.2, 2503.0], [58.3, 2504.0], [58.4, 2509.0], [58.5, 2509.0], [58.6, 2513.0], [58.7, 2513.0], [58.8, 2514.0], [58.9, 2514.0], [59.0, 2517.0], [59.1, 2518.0], [59.2, 2518.0], [59.3, 2521.0], [59.4, 2521.0], [59.5, 2522.0], [59.6, 2522.0], [59.7, 2538.0], [59.8, 2540.0], [59.9, 2540.0], [60.0, 2548.0], [60.1, 2548.0], [60.2, 2548.0], [60.3, 2548.0], [60.4, 2563.0], [60.5, 2567.0], [60.6, 2567.0], [60.7, 2570.0], [60.8, 2570.0], [60.9, 2572.0], [61.0, 2572.0], [61.1, 2585.0], [61.2, 2591.0], [61.3, 2591.0], [61.4, 2594.0], [61.5, 2594.0], [61.6, 2595.0], [61.7, 2595.0], [61.8, 2597.0], [61.9, 2601.0], [62.0, 2601.0], [62.1, 2603.0], [62.2, 2603.0], [62.3, 2615.0], [62.4, 2615.0], [62.5, 2628.0], [62.6, 2631.0], [62.7, 2631.0], [62.8, 2637.0], [62.9, 2637.0], [63.0, 2640.0], [63.1, 2640.0], [63.2, 2647.0], [63.3, 2649.0], [63.4, 2649.0], [63.5, 2665.0], [63.6, 2665.0], [63.7, 2670.0], [63.8, 2670.0], [63.9, 2694.0], [64.0, 2695.0], [64.1, 2695.0], [64.2, 2704.0], [64.3, 2704.0], [64.4, 2709.0], [64.5, 2709.0], [64.6, 2719.0], [64.7, 2737.0], [64.8, 2737.0], [64.9, 2740.0], [65.0, 2740.0], [65.1, 2748.0], [65.2, 2748.0], [65.3, 2748.0], [65.4, 2752.0], [65.5, 2752.0], [65.6, 2752.0], [65.7, 2752.0], [65.8, 2753.0], [65.9, 2753.0], [66.0, 2757.0], [66.1, 2762.0], [66.2, 2762.0], [66.3, 2780.0], [66.4, 2780.0], [66.5, 2792.0], [66.6, 2792.0], [66.7, 2796.0], [66.8, 2806.0], [66.9, 2806.0], [67.0, 2816.0], [67.1, 2816.0], [67.2, 2825.0], [67.3, 2825.0], [67.4, 2845.0], [67.5, 2847.0], [67.6, 2847.0], [67.7, 2865.0], [67.8, 2865.0], [67.9, 2865.0], [68.0, 2865.0], [68.1, 2874.0], [68.2, 2900.0], [68.3, 2900.0], [68.4, 2902.0], [68.5, 2902.0], [68.6, 2911.0], [68.7, 2911.0], [68.8, 2915.0], [68.9, 2932.0], [69.0, 2932.0], [69.1, 2941.0], [69.2, 2941.0], [69.3, 2965.0], [69.4, 2965.0], [69.5, 2966.0], [69.6, 2994.0], [69.7, 2994.0], [69.8, 3002.0], [69.9, 3002.0], [70.0, 3010.0], [70.1, 3010.0], [70.2, 3015.0], [70.3, 3028.0], [70.4, 3028.0], [70.5, 3028.0], [70.6, 3028.0], [70.7, 3030.0], [70.8, 3030.0], [70.9, 3071.0], [71.0, 3073.0], [71.1, 3073.0], [71.2, 3077.0], [71.3, 3077.0], [71.4, 3091.0], [71.5, 3091.0], [71.6, 3137.0], [71.7, 3138.0], [71.8, 3138.0], [71.9, 3143.0], [72.0, 3143.0], [72.1, 3157.0], [72.2, 3157.0], [72.3, 3178.0], [72.4, 3196.0], [72.5, 3196.0], [72.6, 3203.0], [72.7, 3203.0], [72.8, 3211.0], [72.9, 3211.0], [73.0, 3255.0], [73.1, 3260.0], [73.2, 3260.0], [73.3, 3260.0], [73.4, 3260.0], [73.5, 3265.0], [73.6, 3265.0], [73.7, 3272.0], [73.8, 3274.0], [73.9, 3274.0], [74.0, 3276.0], [74.1, 3276.0], [74.2, 3277.0], [74.3, 3277.0], [74.4, 3280.0], [74.5, 3282.0], [74.6, 3282.0], [74.7, 3302.0], [74.8, 3302.0], [74.9, 3304.0], [75.0, 3316.0], [75.1, 3316.0], [75.2, 3332.0], [75.3, 3332.0], [75.4, 3348.0], [75.5, 3348.0], [75.6, 3352.0], [75.7, 3356.0], [75.8, 3356.0], [75.9, 3398.0], [76.0, 3398.0], [76.1, 3399.0], [76.2, 3399.0], [76.3, 3404.0], [76.4, 3408.0], [76.5, 3408.0], [76.6, 3412.0], [76.7, 3412.0], [76.8, 3413.0], [76.9, 3413.0], [77.0, 3426.0], [77.1, 3427.0], [77.2, 3427.0], [77.3, 3431.0], [77.4, 3431.0], [77.5, 3442.0], [77.6, 3442.0], [77.7, 3449.0], [77.8, 3450.0], [77.9, 3450.0], [78.0, 3451.0], [78.1, 3451.0], [78.2, 3451.0], [78.3, 3451.0], [78.4, 3493.0], [78.5, 3499.0], [78.6, 3499.0], [78.7, 3503.0], [78.8, 3503.0], [78.9, 3513.0], [79.0, 3513.0], [79.1, 3513.0], [79.2, 3516.0], [79.3, 3516.0], [79.4, 3521.0], [79.5, 3521.0], [79.6, 3528.0], [79.7, 3528.0], [79.8, 3537.0], [79.9, 3538.0], [80.0, 3538.0], [80.1, 3543.0], [80.2, 3543.0], [80.3, 3543.0], [80.4, 3543.0], [80.5, 3544.0], [80.6, 3561.0], [80.7, 3561.0], [80.8, 3571.0], [80.9, 3571.0], [81.0, 3580.0], [81.1, 3580.0], [81.2, 3594.0], [81.3, 3605.0], [81.4, 3605.0], [81.5, 3625.0], [81.6, 3625.0], [81.7, 3636.0], [81.8, 3636.0], [81.9, 3641.0], [82.0, 3652.0], [82.1, 3652.0], [82.2, 3670.0], [82.3, 3670.0], [82.4, 3704.0], [82.5, 3704.0], [82.6, 3706.0], [82.7, 3728.0], [82.8, 3728.0], [82.9, 3735.0], [83.0, 3735.0], [83.1, 3763.0], [83.2, 3763.0], [83.3, 3783.0], [83.4, 3785.0], [83.5, 3785.0], [83.6, 3796.0], [83.7, 3796.0], [83.8, 3807.0], [83.9, 3807.0], [84.0, 3819.0], [84.1, 3829.0], [84.2, 3829.0], [84.3, 3879.0], [84.4, 3879.0], [84.5, 3893.0], [84.6, 3893.0], [84.7, 3894.0], [84.8, 3910.0], [84.9, 3910.0], [85.0, 3915.0], [85.1, 3915.0], [85.2, 3930.0], [85.3, 3930.0], [85.4, 3935.0], [85.5, 3945.0], [85.6, 3945.0], [85.7, 3960.0], [85.8, 3960.0], [85.9, 3969.0], [86.0, 3969.0], [86.1, 3979.0], [86.2, 3999.0], [86.3, 3999.0], [86.4, 4026.0], [86.5, 4026.0], [86.6, 4028.0], [86.7, 4028.0], [86.8, 4032.0], [86.9, 4041.0], [87.0, 4041.0], [87.1, 4049.0], [87.2, 4049.0], [87.3, 4065.0], [87.4, 4065.0], [87.5, 4075.0], [87.6, 4086.0], [87.7, 4086.0], [87.8, 4086.0], [87.9, 4086.0], [88.0, 4105.0], [88.1, 4105.0], [88.2, 4114.0], [88.3, 4115.0], [88.4, 4115.0], [88.5, 4130.0], [88.6, 4130.0], [88.7, 4147.0], [88.8, 4147.0], [88.9, 4162.0], [89.0, 4186.0], [89.1, 4186.0], [89.2, 4193.0], [89.3, 4193.0], [89.4, 4196.0], [89.5, 4196.0], [89.6, 4200.0], [89.7, 4206.0], [89.8, 4206.0], [89.9, 4211.0], [90.0, 4211.0], [90.1, 4238.0], [90.2, 4238.0], [90.3, 4250.0], [90.4, 4256.0], [90.5, 4256.0], [90.6, 4282.0], [90.7, 4282.0], [90.8, 4282.0], [90.9, 4282.0], [91.0, 4286.0], [91.1, 4302.0], [91.2, 4302.0], [91.3, 4326.0], [91.4, 4326.0], [91.5, 4336.0], [91.6, 4336.0], [91.7, 4336.0], [91.8, 4354.0], [91.9, 4354.0], [92.0, 4358.0], [92.1, 4358.0], [92.2, 4360.0], [92.3, 4360.0], [92.4, 4404.0], [92.5, 4409.0], [92.6, 4409.0], [92.7, 4419.0], [92.8, 4419.0], [92.9, 4436.0], [93.0, 4436.0], [93.1, 4454.0], [93.2, 4468.0], [93.3, 4468.0], [93.4, 4482.0], [93.5, 4482.0], [93.6, 4482.0], [93.7, 4482.0], [93.8, 4494.0], [93.9, 4516.0], [94.0, 4516.0], [94.1, 4544.0], [94.2, 4544.0], [94.3, 4575.0], [94.4, 4575.0], [94.5, 4625.0], [94.6, 4629.0], [94.7, 4629.0], [94.8, 4681.0], [94.9, 4681.0], [95.0, 4682.0], [95.1, 4682.0], [95.2, 4725.0], [95.3, 4727.0], [95.4, 4727.0], [95.5, 4729.0], [95.6, 4729.0], [95.7, 4764.0], [95.8, 4764.0], [95.9, 4805.0], [96.0, 4814.0], [96.1, 4814.0], [96.2, 4865.0], [96.3, 4865.0], [96.4, 4919.0], [96.5, 4919.0], [96.6, 4936.0], [96.7, 4952.0], [96.8, 4952.0], [96.9, 5017.0], [97.0, 5017.0], [97.1, 5058.0], [97.2, 5058.0], [97.3, 5082.0], [97.4, 5087.0], [97.5, 5087.0], [97.6, 5173.0], [97.7, 5173.0], [97.8, 5181.0], [97.9, 5181.0], [98.0, 5196.0], [98.1, 5221.0], [98.2, 5221.0], [98.3, 5275.0], [98.4, 5275.0], [98.5, 5305.0], [98.6, 5305.0], [98.7, 5403.0], [98.8, 5422.0], [98.9, 5422.0], [99.0, 5429.0], [99.1, 5429.0], [99.2, 5497.0], [99.3, 5497.0], [99.4, 5569.0], [99.5, 5753.0], [99.6, 5753.0], [99.7, 5949.0], [99.8, 5949.0], [99.9, 6038.0]], "isOverall": false, "label": "deleting user", "isController": false}, {"data": [[0.0, 126.0], [0.1, 126.0], [0.2, 136.0], [0.3, 136.0], [0.4, 138.0], [0.5, 151.0], [0.6, 151.0], [0.7, 152.0], [0.8, 152.0], [0.9, 155.0], [1.0, 155.0], [1.1, 155.0], [1.2, 161.0], [1.3, 166.0], [1.4, 166.0], [1.5, 170.0], [1.6, 170.0], [1.7, 171.0], [1.8, 183.0], [1.9, 183.0], [2.0, 185.0], [2.1, 185.0], [2.2, 192.0], [2.3, 213.0], [2.4, 213.0], [2.5, 216.0], [2.6, 218.0], [2.7, 218.0], [2.8, 220.0], [2.9, 220.0], [3.0, 221.0], [3.1, 221.0], [3.2, 221.0], [3.3, 233.0], [3.4, 239.0], [3.5, 239.0], [3.6, 242.0], [3.7, 242.0], [3.8, 244.0], [3.9, 252.0], [4.0, 252.0], [4.1, 254.0], [4.2, 254.0], [4.3, 256.0], [4.4, 262.0], [4.5, 262.0], [4.6, 262.0], [4.7, 269.0], [4.8, 269.0], [4.9, 301.0], [5.0, 301.0], [5.1, 315.0], [5.2, 321.0], [5.3, 321.0], [5.4, 324.0], [5.5, 332.0], [5.6, 332.0], [5.7, 348.0], [5.8, 348.0], [5.9, 349.0], [6.0, 351.0], [6.1, 351.0], [6.2, 356.0], [6.3, 356.0], [6.4, 366.0], [6.5, 372.0], [6.6, 372.0], [6.7, 382.0], [6.8, 391.0], [6.9, 391.0], [7.0, 393.0], [7.1, 393.0], [7.2, 418.0], [7.3, 435.0], [7.4, 435.0], [7.5, 439.0], [7.6, 492.0], [7.7, 492.0], [7.8, 497.0], [7.9, 497.0], [8.0, 502.0], [8.1, 513.0], [8.2, 513.0], [8.3, 548.0], [8.4, 548.0], [8.5, 572.0], [8.6, 595.0], [8.7, 595.0], [8.8, 602.0], [8.9, 603.0], [9.0, 603.0], [9.1, 621.0], [9.2, 621.0], [9.3, 639.0], [9.4, 650.0], [9.5, 650.0], [9.6, 675.0], [9.7, 698.0], [9.8, 698.0], [9.9, 726.0], [10.0, 726.0], [10.1, 736.0], [10.2, 756.0], [10.3, 756.0], [10.4, 800.0], [10.5, 800.0], [10.6, 818.0], [10.7, 818.0], [10.8, 818.0], [10.9, 837.0], [11.0, 860.0], [11.1, 860.0], [11.2, 868.0], [11.3, 868.0], [11.4, 873.0], [11.5, 879.0], [11.6, 879.0], [11.7, 909.0], [11.8, 923.0], [11.9, 923.0], [12.0, 927.0], [12.1, 927.0], [12.2, 932.0], [12.3, 943.0], [12.4, 943.0], [12.5, 946.0], [12.6, 946.0], [12.7, 967.0], [12.8, 973.0], [12.9, 973.0], [13.0, 978.0], [13.1, 993.0], [13.2, 993.0], [13.3, 1009.0], [13.4, 1009.0], [13.5, 1012.0], [13.6, 1027.0], [13.7, 1027.0], [13.8, 1073.0], [13.9, 1089.0], [14.0, 1089.0], [14.1, 1107.0], [14.2, 1107.0], [14.3, 1113.0], [14.4, 1311.0], [14.5, 1311.0], [14.6, 1325.0], [14.7, 1325.0], [14.8, 1339.0], [14.9, 1353.0], [15.0, 1353.0], [15.1, 1369.0], [15.2, 1407.0], [15.3, 1407.0], [15.4, 1429.0], [15.5, 1429.0], [15.6, 1489.0], [15.7, 1524.0], [15.8, 1524.0], [15.9, 1547.0], [16.0, 1617.0], [16.1, 1617.0], [16.2, 1622.0], [16.3, 1622.0], [16.4, 1627.0], [16.5, 1652.0], [16.6, 1652.0], [16.7, 1656.0], [16.8, 1656.0], [16.9, 1681.0], [17.0, 1697.0], [17.1, 1697.0], [17.2, 1710.0], [17.3, 1722.0], [17.4, 1722.0], [17.5, 1752.0], [17.6, 1752.0], [17.7, 1752.0], [17.8, 1760.0], [17.9, 1760.0], [18.0, 1763.0], [18.1, 1778.0], [18.2, 1778.0], [18.3, 1798.0], [18.4, 1798.0], [18.5, 1823.0], [18.6, 1838.0], [18.7, 1838.0], [18.8, 1858.0], [18.9, 1858.0], [19.0, 1905.0], [19.1, 1914.0], [19.2, 1914.0], [19.3, 1933.0], [19.4, 1946.0], [19.5, 1946.0], [19.6, 1970.0], [19.7, 1970.0], [19.8, 1974.0], [19.9, 2001.0], [20.0, 2001.0], [20.1, 2051.0], [20.2, 2118.0], [20.3, 2118.0], [20.4, 2139.0], [20.5, 2139.0], [20.6, 2152.0], [20.7, 2159.0], [20.8, 2159.0], [20.9, 2163.0], [21.0, 2163.0], [21.1, 2167.0], [21.2, 2179.0], [21.3, 2179.0], [21.4, 2180.0], [21.5, 2206.0], [21.6, 2206.0], [21.7, 2208.0], [21.8, 2208.0], [21.9, 2222.0], [22.0, 2241.0], [22.1, 2241.0], [22.2, 2247.0], [22.3, 2251.0], [22.4, 2251.0], [22.5, 2251.0], [22.6, 2251.0], [22.7, 2265.0], [22.8, 2269.0], [22.9, 2269.0], [23.0, 2271.0], [23.1, 2271.0], [23.2, 2276.0], [23.3, 2299.0], [23.4, 2299.0], [23.5, 2312.0], [23.6, 2317.0], [23.7, 2317.0], [23.8, 2321.0], [23.9, 2321.0], [24.0, 2327.0], [24.1, 2347.0], [24.2, 2347.0], [24.3, 2354.0], [24.4, 2366.0], [24.5, 2366.0], [24.6, 2368.0], [24.7, 2368.0], [24.8, 2377.0], [24.9, 2390.0], [25.0, 2390.0], [25.1, 2442.0], [25.2, 2442.0], [25.3, 2447.0], [25.4, 2451.0], [25.5, 2451.0], [25.6, 2458.0], [25.7, 2460.0], [25.8, 2460.0], [25.9, 2496.0], [26.0, 2496.0], [26.1, 2503.0], [26.2, 2504.0], [26.3, 2504.0], [26.4, 2511.0], [26.5, 2514.0], [26.6, 2514.0], [26.7, 2515.0], [26.8, 2515.0], [26.9, 2520.0], [27.0, 2531.0], [27.1, 2531.0], [27.2, 2536.0], [27.3, 2536.0], [27.4, 2539.0], [27.5, 2552.0], [27.6, 2552.0], [27.7, 2557.0], [27.8, 2558.0], [27.9, 2558.0], [28.0, 2571.0], [28.1, 2571.0], [28.2, 2578.0], [28.3, 2580.0], [28.4, 2580.0], [28.5, 2593.0], [28.6, 2605.0], [28.7, 2605.0], [28.8, 2638.0], [28.9, 2638.0], [29.0, 2647.0], [29.1, 2652.0], [29.2, 2652.0], [29.3, 2670.0], [29.4, 2670.0], [29.5, 2671.0], [29.6, 2675.0], [29.7, 2675.0], [29.8, 2682.0], [29.9, 2682.0], [30.0, 2682.0], [30.1, 2702.0], [30.2, 2702.0], [30.3, 2726.0], [30.4, 2731.0], [30.5, 2731.0], [30.6, 2740.0], [30.7, 2754.0], [30.8, 2754.0], [30.9, 2766.0], [31.0, 2766.0], [31.1, 2788.0], [31.2, 2798.0], [31.3, 2798.0], [31.4, 2802.0], [31.5, 2802.0], [31.6, 2804.0], [31.7, 2808.0], [31.8, 2808.0], [31.9, 2825.0], [32.0, 2830.0], [32.1, 2830.0], [32.2, 2849.0], [32.3, 2849.0], [32.4, 2856.0], [32.5, 2862.0], [32.6, 2862.0], [32.7, 2868.0], [32.8, 2894.0], [32.9, 2894.0], [33.0, 2899.0], [33.1, 2899.0], [33.2, 2911.0], [33.3, 2937.0], [33.4, 2937.0], [33.5, 2973.0], [33.6, 2973.0], [33.7, 2986.0], [33.8, 2995.0], [33.9, 2995.0], [34.0, 2999.0], [34.1, 3014.0], [34.2, 3014.0], [34.3, 3023.0], [34.4, 3023.0], [34.5, 3025.0], [34.6, 3034.0], [34.7, 3034.0], [34.8, 3053.0], [34.9, 3057.0], [35.0, 3057.0], [35.1, 3063.0], [35.2, 3063.0], [35.3, 3066.0], [35.4, 3083.0], [35.5, 3083.0], [35.6, 3086.0], [35.7, 3086.0], [35.8, 3098.0], [35.9, 3106.0], [36.0, 3106.0], [36.1, 3129.0], [36.2, 3129.0], [36.3, 3129.0], [36.4, 3131.0], [36.5, 3131.0], [36.6, 3144.0], [36.7, 3155.0], [36.8, 3155.0], [36.9, 3171.0], [37.0, 3174.0], [37.1, 3174.0], [37.2, 3176.0], [37.3, 3176.0], [37.4, 3187.0], [37.5, 3191.0], [37.6, 3191.0], [37.7, 3192.0], [37.8, 3192.0], [37.9, 3194.0], [38.0, 3215.0], [38.1, 3215.0], [38.2, 3227.0], [38.3, 3235.0], [38.4, 3235.0], [38.5, 3248.0], [38.6, 3248.0], [38.7, 3262.0], [38.8, 3274.0], [38.9, 3274.0], [39.0, 3291.0], [39.1, 3301.0], [39.2, 3301.0], [39.3, 3312.0], [39.4, 3312.0], [39.5, 3319.0], [39.6, 3324.0], [39.7, 3324.0], [39.8, 3333.0], [39.9, 3333.0], [40.0, 3336.0], [40.1, 3347.0], [40.2, 3347.0], [40.3, 3370.0], [40.4, 3373.0], [40.5, 3373.0], [40.6, 3392.0], [40.7, 3392.0], [40.8, 3431.0], [40.9, 3431.0], [41.0, 3431.0], [41.1, 3444.0], [41.2, 3453.0], [41.3, 3453.0], [41.4, 3458.0], [41.5, 3458.0], [41.6, 3476.0], [41.7, 3478.0], [41.8, 3478.0], [41.9, 3483.0], [42.0, 3483.0], [42.1, 3503.0], [42.2, 3529.0], [42.3, 3529.0], [42.4, 3546.0], [42.5, 3606.0], [42.6, 3606.0], [42.7, 3615.0], [42.8, 3615.0], [42.9, 3620.0], [43.0, 3630.0], [43.1, 3630.0], [43.2, 3643.0], [43.3, 3644.0], [43.4, 3644.0], [43.5, 3645.0], [43.6, 3645.0], [43.7, 3669.0], [43.8, 3686.0], [43.9, 3686.0], [44.0, 3688.0], [44.1, 3688.0], [44.2, 3702.0], [44.3, 3728.0], [44.4, 3728.0], [44.5, 3740.0], [44.6, 3750.0], [44.7, 3750.0], [44.8, 3759.0], [44.9, 3759.0], [45.0, 3761.0], [45.1, 3771.0], [45.2, 3771.0], [45.3, 3772.0], [45.4, 3778.0], [45.5, 3778.0], [45.6, 3786.0], [45.7, 3786.0], [45.8, 3787.0], [45.9, 3813.0], [46.0, 3813.0], [46.1, 3820.0], [46.2, 3820.0], [46.3, 3847.0], [46.4, 3855.0], [46.5, 3855.0], [46.6, 3876.0], [46.7, 3925.0], [46.8, 3925.0], [46.9, 3930.0], [47.0, 3930.0], [47.1, 3933.0], [47.2, 3934.0], [47.3, 3934.0], [47.4, 3966.0], [47.5, 3974.0], [47.6, 3974.0], [47.7, 3986.0], [47.8, 3986.0], [47.9, 3986.0], [48.0, 4002.0], [48.1, 4002.0], [48.2, 4003.0], [48.3, 4003.0], [48.4, 4005.0], [48.5, 4033.0], [48.6, 4033.0], [48.7, 4044.0], [48.8, 4053.0], [48.9, 4053.0], [49.0, 4053.0], [49.1, 4053.0], [49.2, 4074.0], [49.3, 4077.0], [49.4, 4077.0], [49.5, 4091.0], [49.6, 4128.0], [49.7, 4128.0], [49.8, 4130.0], [49.9, 4130.0], [50.0, 4131.0], [50.1, 4150.0], [50.2, 4150.0], [50.3, 4159.0], [50.4, 4159.0], [50.5, 4184.0], [50.6, 4197.0], [50.7, 4197.0], [50.8, 4197.0], [50.9, 4204.0], [51.0, 4204.0], [51.1, 4213.0], [51.2, 4213.0], [51.3, 4214.0], [51.4, 4227.0], [51.5, 4227.0], [51.6, 4254.0], [51.7, 4267.0], [51.8, 4267.0], [51.9, 4270.0], [52.0, 4270.0], [52.1, 4276.0], [52.2, 4279.0], [52.3, 4279.0], [52.4, 4282.0], [52.5, 4282.0], [52.6, 4294.0], [52.7, 4303.0], [52.8, 4303.0], [52.9, 4309.0], [53.0, 4313.0], [53.1, 4313.0], [53.2, 4316.0], [53.3, 4316.0], [53.4, 4327.0], [53.5, 4347.0], [53.6, 4347.0], [53.7, 4349.0], [53.8, 4352.0], [53.9, 4352.0], [54.0, 4354.0], [54.1, 4354.0], [54.2, 4355.0], [54.3, 4366.0], [54.4, 4366.0], [54.5, 4367.0], [54.6, 4367.0], [54.7, 4370.0], [54.8, 4375.0], [54.9, 4375.0], [55.0, 4404.0], [55.1, 4424.0], [55.2, 4424.0], [55.3, 4462.0], [55.4, 4462.0], [55.5, 4477.0], [55.6, 4483.0], [55.7, 4483.0], [55.8, 4504.0], [55.9, 4509.0], [56.0, 4509.0], [56.1, 4510.0], [56.2, 4510.0], [56.3, 4513.0], [56.4, 4524.0], [56.5, 4524.0], [56.6, 4527.0], [56.7, 4527.0], [56.8, 4541.0], [56.9, 4561.0], [57.0, 4561.0], [57.1, 4562.0], [57.2, 4564.0], [57.3, 4564.0], [57.4, 4569.0], [57.5, 4569.0], [57.6, 4571.0], [57.7, 4587.0], [57.8, 4587.0], [57.9, 4594.0], [58.0, 4596.0], [58.1, 4596.0], [58.2, 4597.0], [58.3, 4597.0], [58.4, 4622.0], [58.5, 4641.0], [58.6, 4641.0], [58.7, 4641.0], [58.8, 4641.0], [58.9, 4641.0], [59.0, 4649.0], [59.1, 4649.0], [59.2, 4653.0], [59.3, 4661.0], [59.4, 4661.0], [59.5, 4674.0], [59.6, 4674.0], [59.7, 4682.0], [59.8, 4699.0], [59.9, 4699.0], [60.0, 4702.0], [60.1, 4708.0], [60.2, 4708.0], [60.3, 4736.0], [60.4, 4736.0], [60.5, 4742.0], [60.6, 4751.0], [60.7, 4751.0], [60.8, 4753.0], [60.9, 4753.0], [61.0, 4753.0], [61.1, 4800.0], [61.2, 4800.0], [61.3, 4803.0], [61.4, 4805.0], [61.5, 4805.0], [61.6, 4821.0], [61.7, 4821.0], [61.8, 4822.0], [61.9, 4822.0], [62.0, 4822.0], [62.1, 4826.0], [62.2, 4827.0], [62.3, 4827.0], [62.4, 4844.0], [62.5, 4844.0], [62.6, 4845.0], [62.7, 4854.0], [62.8, 4854.0], [62.9, 4862.0], [63.0, 4862.0], [63.1, 4862.0], [63.2, 4867.0], [63.3, 4867.0], [63.4, 4869.0], [63.5, 4869.0], [63.6, 4869.0], [63.7, 4870.0], [63.8, 4870.0], [63.9, 4876.0], [64.0, 4884.0], [64.1, 4884.0], [64.2, 4886.0], [64.3, 4888.0], [64.4, 4888.0], [64.5, 4889.0], [64.6, 4889.0], [64.7, 4921.0], [64.8, 4922.0], [64.9, 4922.0], [65.0, 4930.0], [65.1, 4930.0], [65.2, 4934.0], [65.3, 4948.0], [65.4, 4948.0], [65.5, 4951.0], [65.6, 4959.0], [65.7, 4959.0], [65.8, 4966.0], [65.9, 4966.0], [66.0, 4980.0], [66.1, 4981.0], [66.2, 4981.0], [66.3, 5000.0], [66.4, 5001.0], [66.5, 5001.0], [66.6, 5003.0], [66.7, 5003.0], [66.8, 5012.0], [66.9, 5033.0], [67.0, 5033.0], [67.1, 5034.0], [67.2, 5034.0], [67.3, 5050.0], [67.4, 5051.0], [67.5, 5051.0], [67.6, 5060.0], [67.7, 5062.0], [67.8, 5062.0], [67.9, 5066.0], [68.0, 5066.0], [68.1, 5077.0], [68.2, 5089.0], [68.3, 5089.0], [68.4, 5107.0], [68.5, 5113.0], [68.6, 5113.0], [68.7, 5120.0], [68.8, 5120.0], [68.9, 5120.0], [69.0, 5128.0], [69.1, 5128.0], [69.2, 5129.0], [69.3, 5129.0], [69.4, 5151.0], [69.5, 5157.0], [69.6, 5157.0], [69.7, 5230.0], [69.8, 5253.0], [69.9, 5253.0], [70.0, 5255.0], [70.1, 5255.0], [70.2, 5257.0], [70.3, 5258.0], [70.4, 5258.0], [70.5, 5267.0], [70.6, 5287.0], [70.7, 5287.0], [70.8, 5288.0], [70.9, 5288.0], [71.0, 5358.0], [71.1, 5362.0], [71.2, 5362.0], [71.3, 5383.0], [71.4, 5383.0], [71.5, 5399.0], [71.6, 5425.0], [71.7, 5425.0], [71.8, 5429.0], [71.9, 5431.0], [72.0, 5431.0], [72.1, 5455.0], [72.2, 5455.0], [72.3, 5459.0], [72.4, 5469.0], [72.5, 5469.0], [72.6, 5478.0], [72.7, 5488.0], [72.8, 5488.0], [72.9, 5499.0], [73.0, 5499.0], [73.1, 5583.0], [73.2, 5590.0], [73.3, 5590.0], [73.4, 5594.0], [73.5, 5594.0], [73.6, 5596.0], [73.7, 5608.0], [73.8, 5608.0], [73.9, 5610.0], [74.0, 5620.0], [74.1, 5620.0], [74.2, 5621.0], [74.3, 5621.0], [74.4, 5629.0], [74.5, 5649.0], [74.6, 5649.0], [74.7, 5657.0], [74.8, 5669.0], [74.9, 5669.0], [75.0, 5695.0], [75.1, 5695.0], [75.2, 5696.0], [75.3, 5702.0], [75.4, 5702.0], [75.5, 5710.0], [75.6, 5710.0], [75.7, 5723.0], [75.8, 5762.0], [75.9, 5762.0], [76.0, 5796.0], [76.1, 5798.0], [76.2, 5798.0], [76.3, 5799.0], [76.4, 5799.0], [76.5, 5840.0], [76.6, 5868.0], [76.7, 5868.0], [76.8, 5873.0], [76.9, 5885.0], [77.0, 5885.0], [77.1, 5890.0], [77.2, 5890.0], [77.3, 5921.0], [77.4, 5936.0], [77.5, 5936.0], [77.6, 5968.0], [77.7, 5968.0], [77.8, 5968.0], [77.9, 5990.0], [78.0, 5990.0], [78.1, 5997.0], [78.2, 6008.0], [78.3, 6008.0], [78.4, 6011.0], [78.5, 6011.0], [78.6, 6028.0], [78.7, 6052.0], [78.8, 6052.0], [78.9, 6060.0], [79.0, 6061.0], [79.1, 6061.0], [79.2, 6076.0], [79.3, 6076.0], [79.4, 6157.0], [79.5, 6180.0], [79.6, 6180.0], [79.7, 6199.0], [79.8, 6199.0], [79.9, 6223.0], [80.0, 6234.0], [80.1, 6234.0], [80.2, 6268.0], [80.3, 6272.0], [80.4, 6272.0], [80.5, 6299.0], [80.6, 6299.0], [80.7, 6299.0], [80.8, 6304.0], [80.9, 6304.0], [81.0, 6310.0], [81.1, 6314.0], [81.2, 6314.0], [81.3, 6337.0], [81.4, 6337.0], [81.5, 6342.0], [81.6, 6353.0], [81.7, 6353.0], [81.8, 6391.0], [81.9, 6391.0], [82.0, 6391.0], [82.1, 6402.0], [82.2, 6402.0], [82.3, 6428.0], [82.4, 6433.0], [82.5, 6433.0], [82.6, 6459.0], [82.7, 6459.0], [82.8, 6469.0], [82.9, 6480.0], [83.0, 6480.0], [83.1, 6533.0], [83.2, 6538.0], [83.3, 6538.0], [83.4, 6546.0], [83.5, 6546.0], [83.6, 6556.0], [83.7, 6581.0], [83.8, 6581.0], [83.9, 6595.0], [84.0, 6595.0], [84.1, 6604.0], [84.2, 6608.0], [84.3, 6608.0], [84.4, 6617.0], [84.5, 6632.0], [84.6, 6632.0], [84.7, 6656.0], [84.8, 6656.0], [84.9, 6671.0], [85.0, 6674.0], [85.1, 6674.0], [85.2, 6687.0], [85.3, 6694.0], [85.4, 6694.0], [85.5, 6746.0], [85.6, 6746.0], [85.7, 6753.0], [85.8, 6770.0], [85.9, 6770.0], [86.0, 6771.0], [86.1, 6771.0], [86.2, 6785.0], [86.3, 6810.0], [86.4, 6810.0], [86.5, 6815.0], [86.6, 6838.0], [86.7, 6838.0], [86.8, 6846.0], [86.9, 6846.0], [87.0, 6854.0], [87.1, 6862.0], [87.2, 6862.0], [87.3, 6880.0], [87.4, 6887.0], [87.5, 6887.0], [87.6, 6897.0], [87.7, 6897.0], [87.8, 6908.0], [87.9, 6919.0], [88.0, 6919.0], [88.1, 6924.0], [88.2, 6924.0], [88.3, 6928.0], [88.4, 6957.0], [88.5, 6957.0], [88.6, 7018.0], [88.7, 7027.0], [88.8, 7027.0], [88.9, 7034.0], [89.0, 7034.0], [89.1, 7035.0], [89.2, 7070.0], [89.3, 7070.0], [89.4, 7071.0], [89.5, 7137.0], [89.6, 7137.0], [89.7, 7140.0], [89.8, 7140.0], [89.9, 7172.0], [90.0, 7176.0], [90.1, 7176.0], [90.2, 7179.0], [90.3, 7179.0], [90.4, 7183.0], [90.5, 7187.0], [90.6, 7187.0], [90.7, 7213.0], [90.8, 7218.0], [90.9, 7218.0], [91.0, 7219.0], [91.1, 7219.0], [91.2, 7219.0], [91.3, 7229.0], [91.4, 7229.0], [91.5, 7239.0], [91.6, 7275.0], [91.7, 7275.0], [91.8, 7286.0], [91.9, 7286.0], [92.0, 7319.0], [92.1, 7340.0], [92.2, 7340.0], [92.3, 7361.0], [92.4, 7361.0], [92.5, 7370.0], [92.6, 7388.0], [92.7, 7388.0], [92.8, 7450.0], [92.9, 7465.0], [93.0, 7465.0], [93.1, 7503.0], [93.2, 7503.0], [93.3, 7523.0], [93.4, 7524.0], [93.5, 7524.0], [93.6, 7564.0], [93.7, 7585.0], [93.8, 7585.0], [93.9, 7604.0], [94.0, 7604.0], [94.1, 7612.0], [94.2, 7630.0], [94.3, 7630.0], [94.4, 7651.0], [94.5, 7651.0], [94.6, 7667.0], [94.7, 7677.0], [94.8, 7677.0], [94.9, 7705.0], [95.0, 7730.0], [95.1, 7730.0], [95.2, 7797.0], [95.3, 7797.0], [95.4, 7800.0], [95.5, 7808.0], [95.6, 7808.0], [95.7, 7834.0], [95.8, 7971.0], [95.9, 7971.0], [96.0, 7988.0], [96.1, 7988.0], [96.2, 7999.0], [96.3, 8035.0], [96.4, 8035.0], [96.5, 8094.0], [96.6, 8094.0], [96.7, 8134.0], [96.8, 8136.0], [96.9, 8136.0], [97.0, 8155.0], [97.1, 8199.0], [97.2, 8199.0], [97.3, 8235.0], [97.4, 8235.0], [97.5, 8273.0], [97.6, 8303.0], [97.7, 8303.0], [97.8, 8329.0], [97.9, 8363.0], [98.0, 8363.0], [98.1, 8379.0], [98.2, 8379.0], [98.3, 8380.0], [98.4, 8403.0], [98.5, 8403.0], [98.6, 8462.0], [98.7, 8462.0], [98.8, 8538.0], [98.9, 8554.0], [99.0, 8554.0], [99.1, 8742.0], [99.2, 8774.0], [99.3, 8774.0], [99.4, 9127.0], [99.5, 9127.0], [99.6, 9274.0], [99.7, 9440.0], [99.8, 9440.0], [99.9, 9590.0], [100.0, 9590.0]], "isOverall": false, "label": "ReadUsers", "isController": false}, {"data": [[0.0, 51.0], [0.1, 51.0], [0.2, 53.0], [0.3, 53.0], [0.4, 56.0], [0.5, 56.0], [0.6, 56.0], [0.7, 56.0], [0.8, 56.0], [0.9, 57.0], [1.0, 57.0], [1.1, 57.0], [1.2, 57.0], [1.3, 57.0], [1.4, 59.0], [1.5, 59.0], [1.6, 59.0], [1.7, 60.0], [1.8, 60.0], [1.9, 60.0], [2.0, 60.0], [2.1, 61.0], [2.2, 61.0], [2.3, 61.0], [2.4, 62.0], [2.5, 62.0], [2.6, 64.0], [2.7, 64.0], [2.8, 65.0], [2.9, 65.0], [3.0, 65.0], [3.1, 66.0], [3.2, 66.0], [3.3, 66.0], [3.4, 66.0], [3.5, 66.0], [3.6, 68.0], [3.7, 68.0], [3.8, 70.0], [3.9, 70.0], [4.0, 70.0], [4.1, 71.0], [4.2, 71.0], [4.3, 71.0], [4.4, 73.0], [4.5, 73.0], [4.6, 78.0], [4.7, 78.0], [4.8, 79.0], [4.9, 79.0], [5.0, 82.0], [5.1, 85.0], [5.2, 85.0], [5.3, 86.0], [5.4, 86.0], [5.5, 88.0], [5.6, 89.0], [5.7, 89.0], [5.8, 92.0], [5.9, 92.0], [6.0, 96.0], [6.1, 109.0], [6.2, 109.0], [6.3, 111.0], [6.4, 111.0], [6.5, 111.0], [6.6, 127.0], [6.7, 127.0], [6.8, 132.0], [6.9, 132.0], [7.0, 137.0], [7.1, 137.0], [7.2, 144.0], [7.3, 145.0], [7.4, 145.0], [7.5, 165.0], [7.6, 165.0], [7.7, 176.0], [7.8, 185.0], [7.9, 185.0], [8.0, 195.0], [8.1, 195.0], [8.2, 206.0], [8.3, 261.0], [8.4, 261.0], [8.5, 261.0], [8.6, 261.0], [8.7, 269.0], [8.8, 284.0], [8.9, 284.0], [9.0, 284.0], [9.1, 284.0], [9.2, 287.0], [9.3, 287.0], [9.4, 287.0], [9.5, 290.0], [9.6, 290.0], [9.7, 294.0], [9.8, 294.0], [9.9, 294.0], [10.0, 301.0], [10.1, 301.0], [10.2, 318.0], [10.3, 318.0], [10.4, 364.0], [10.5, 376.0], [10.6, 376.0], [10.7, 386.0], [10.8, 386.0], [10.9, 389.0], [11.0, 410.0], [11.1, 410.0], [11.2, 425.0], [11.3, 425.0], [11.4, 428.0], [11.5, 428.0], [11.6, 444.0], [11.7, 445.0], [11.8, 445.0], [11.9, 445.0], [12.0, 445.0], [12.1, 451.0], [12.2, 479.0], [12.3, 479.0], [12.4, 498.0], [12.5, 498.0], [12.6, 695.0], [12.7, 730.0], [12.8, 730.0], [12.9, 736.0], [13.0, 736.0], [13.1, 746.0], [13.2, 751.0], [13.3, 751.0], [13.4, 753.0], [13.5, 753.0], [13.6, 763.0], [13.7, 763.0], [13.8, 764.0], [13.9, 770.0], [14.0, 770.0], [14.1, 781.0], [14.2, 781.0], [14.3, 806.0], [14.4, 815.0], [14.5, 815.0], [14.6, 818.0], [14.7, 818.0], [14.8, 829.0], [14.9, 836.0], [15.0, 836.0], [15.1, 844.0], [15.2, 844.0], [15.3, 848.0], [15.4, 862.0], [15.5, 862.0], [15.6, 904.0], [15.7, 904.0], [15.8, 914.0], [15.9, 914.0], [16.0, 917.0], [16.1, 951.0], [16.2, 951.0], [16.3, 953.0], [16.4, 953.0], [16.5, 958.0], [16.6, 978.0], [16.7, 978.0], [16.8, 980.0], [16.9, 980.0], [17.0, 1024.0], [17.1, 1042.0], [17.2, 1042.0], [17.3, 1060.0], [17.4, 1060.0], [17.5, 1061.0], [17.6, 1078.0], [17.7, 1078.0], [17.8, 1088.0], [17.9, 1088.0], [18.0, 1105.0], [18.1, 1105.0], [18.2, 1105.0], [18.3, 1126.0], [18.4, 1126.0], [18.5, 1136.0], [18.6, 1136.0], [18.7, 1138.0], [18.8, 1146.0], [18.9, 1146.0], [19.0, 1151.0], [19.1, 1151.0], [19.2, 1165.0], [19.3, 1208.0], [19.4, 1208.0], [19.5, 1239.0], [19.6, 1239.0], [19.7, 1242.0], [19.8, 1244.0], [19.9, 1244.0], [20.0, 1249.0], [20.1, 1249.0], [20.2, 1256.0], [20.3, 1256.0], [20.4, 1258.0], [20.5, 1268.0], [20.6, 1268.0], [20.7, 1268.0], [20.8, 1268.0], [20.9, 1270.0], [21.0, 1270.0], [21.1, 1270.0], [21.2, 1292.0], [21.3, 1292.0], [21.4, 1293.0], [21.5, 1293.0], [21.6, 1293.0], [21.7, 1294.0], [21.8, 1294.0], [21.9, 1306.0], [22.0, 1308.0], [22.1, 1308.0], [22.2, 1308.0], [22.3, 1308.0], [22.4, 1312.0], [22.5, 1312.0], [22.6, 1327.0], [22.7, 1329.0], [22.8, 1329.0], [22.9, 1330.0], [23.0, 1330.0], [23.1, 1331.0], [23.2, 1334.0], [23.3, 1334.0], [23.4, 1334.0], [23.5, 1334.0], [23.6, 1334.0], [23.7, 1335.0], [23.8, 1335.0], [23.9, 1335.0], [24.0, 1335.0], [24.1, 1335.0], [24.2, 1336.0], [24.3, 1336.0], [24.4, 1339.0], [24.5, 1339.0], [24.6, 1339.0], [24.7, 1339.0], [24.8, 1347.0], [24.9, 1348.0], [25.0, 1348.0], [25.1, 1349.0], [25.2, 1349.0], [25.3, 1351.0], [25.4, 1352.0], [25.5, 1352.0], [25.6, 1353.0], [25.7, 1353.0], [25.8, 1355.0], [25.9, 1360.0], [26.0, 1360.0], [26.1, 1366.0], [26.2, 1366.0], [26.3, 1370.0], [26.4, 1370.0], [26.5, 1370.0], [26.6, 1373.0], [26.7, 1373.0], [26.8, 1374.0], [26.9, 1374.0], [27.0, 1376.0], [27.1, 1392.0], [27.2, 1392.0], [27.3, 1392.0], [27.4, 1392.0], [27.5, 1393.0], [27.6, 1395.0], [27.7, 1395.0], [27.8, 1400.0], [27.9, 1400.0], [28.0, 1402.0], [28.1, 1403.0], [28.2, 1403.0], [28.3, 1417.0], [28.4, 1417.0], [28.5, 1423.0], [28.6, 1424.0], [28.7, 1424.0], [28.8, 1426.0], [28.9, 1426.0], [29.0, 1426.0], [29.1, 1426.0], [29.2, 1428.0], [29.3, 1432.0], [29.4, 1432.0], [29.5, 1432.0], [29.6, 1432.0], [29.7, 1435.0], [29.8, 1437.0], [29.9, 1437.0], [30.0, 1438.0], [30.1, 1438.0], [30.2, 1447.0], [30.3, 1452.0], [30.4, 1452.0], [30.5, 1452.0], [30.6, 1452.0], [30.7, 1474.0], [30.8, 1474.0], [30.9, 1474.0], [31.0, 1475.0], [31.1, 1475.0], [31.2, 1483.0], [31.3, 1483.0], [31.4, 1492.0], [31.5, 1493.0], [31.6, 1493.0], [31.7, 1493.0], [31.8, 1493.0], [31.9, 1497.0], [32.0, 1499.0], [32.1, 1499.0], [32.2, 1503.0], [32.3, 1503.0], [32.4, 1512.0], [32.5, 1519.0], [32.6, 1519.0], [32.7, 1520.0], [32.8, 1520.0], [32.9, 1526.0], [33.0, 1528.0], [33.1, 1528.0], [33.2, 1535.0], [33.3, 1535.0], [33.4, 1535.0], [33.5, 1535.0], [33.6, 1541.0], [33.7, 1545.0], [33.8, 1545.0], [33.9, 1556.0], [34.0, 1556.0], [34.1, 1560.0], [34.2, 1569.0], [34.3, 1569.0], [34.4, 1575.0], [34.5, 1575.0], [34.6, 1585.0], [34.7, 1589.0], [34.8, 1589.0], [34.9, 1600.0], [35.0, 1600.0], [35.1, 1602.0], [35.2, 1605.0], [35.3, 1605.0], [35.4, 1606.0], [35.5, 1606.0], [35.6, 1607.0], [35.7, 1607.0], [35.8, 1608.0], [35.9, 1613.0], [36.0, 1613.0], [36.1, 1615.0], [36.2, 1615.0], [36.3, 1615.0], [36.4, 1618.0], [36.5, 1618.0], [36.6, 1619.0], [36.7, 1619.0], [36.8, 1620.0], [36.9, 1623.0], [37.0, 1623.0], [37.1, 1629.0], [37.2, 1629.0], [37.3, 1630.0], [37.4, 1630.0], [37.5, 1630.0], [37.6, 1631.0], [37.7, 1631.0], [37.8, 1634.0], [37.9, 1634.0], [38.0, 1636.0], [38.1, 1645.0], [38.2, 1645.0], [38.3, 1645.0], [38.4, 1645.0], [38.5, 1659.0], [38.6, 1660.0], [38.7, 1660.0], [38.8, 1664.0], [38.9, 1664.0], [39.0, 1673.0], [39.1, 1674.0], [39.2, 1674.0], [39.3, 1687.0], [39.4, 1687.0], [39.5, 1697.0], [39.6, 1699.0], [39.7, 1699.0], [39.8, 1703.0], [39.9, 1703.0], [40.0, 1703.0], [40.1, 1703.0], [40.2, 1704.0], [40.3, 1706.0], [40.4, 1706.0], [40.5, 1723.0], [40.6, 1723.0], [40.7, 1724.0], [40.8, 1725.0], [40.9, 1725.0], [41.0, 1729.0], [41.1, 1729.0], [41.2, 1739.0], [41.3, 1740.0], [41.4, 1740.0], [41.5, 1741.0], [41.6, 1741.0], [41.7, 1762.0], [41.8, 1767.0], [41.9, 1767.0], [42.0, 1772.0], [42.1, 1772.0], [42.2, 1778.0], [42.3, 1778.0], [42.4, 1796.0], [42.5, 1800.0], [42.6, 1800.0], [42.7, 1801.0], [42.8, 1801.0], [42.9, 1805.0], [43.0, 1808.0], [43.1, 1808.0], [43.2, 1809.0], [43.3, 1809.0], [43.4, 1817.0], [43.5, 1820.0], [43.6, 1820.0], [43.7, 1827.0], [43.8, 1827.0], [43.9, 1828.0], [44.0, 1830.0], [44.1, 1830.0], [44.2, 1830.0], [44.3, 1830.0], [44.4, 1831.0], [44.5, 1831.0], [44.6, 1831.0], [44.7, 1832.0], [44.8, 1832.0], [44.9, 1834.0], [45.0, 1834.0], [45.1, 1836.0], [45.2, 1839.0], [45.3, 1839.0], [45.4, 1844.0], [45.5, 1844.0], [45.6, 1847.0], [45.7, 1847.0], [45.8, 1847.0], [45.9, 1848.0], [46.0, 1848.0], [46.1, 1854.0], [46.2, 1858.0], [46.3, 1858.0], [46.4, 1880.0], [46.5, 1880.0], [46.6, 1881.0], [46.7, 1881.0], [46.8, 1884.0], [46.9, 1906.0], [47.0, 1906.0], [47.1, 1917.0], [47.2, 1917.0], [47.3, 1920.0], [47.4, 1925.0], [47.5, 1925.0], [47.6, 1927.0], [47.7, 1927.0], [47.8, 1933.0], [47.9, 1947.0], [48.0, 1947.0], [48.1, 1948.0], [48.2, 1948.0], [48.3, 1951.0], [48.4, 1952.0], [48.5, 1952.0], [48.6, 1958.0], [48.7, 1958.0], [48.8, 1960.0], [48.9, 1960.0], [49.0, 1960.0], [49.1, 1974.0], [49.2, 1974.0], [49.3, 1983.0], [49.4, 1983.0], [49.5, 1987.0], [49.6, 1997.0], [49.7, 1997.0], [49.8, 1998.0], [49.9, 1998.0], [50.0, 1998.0], [50.1, 2000.0], [50.2, 2000.0], [50.3, 2002.0], [50.4, 2002.0], [50.5, 2004.0], [50.6, 2005.0], [50.7, 2005.0], [50.8, 2006.0], [50.9, 2006.0], [51.0, 2009.0], [51.1, 2011.0], [51.2, 2011.0], [51.3, 2020.0], [51.4, 2020.0], [51.5, 2024.0], [51.6, 2024.0], [51.7, 2035.0], [51.8, 2044.0], [51.9, 2044.0], [52.0, 2051.0], [52.1, 2051.0], [52.2, 2061.0], [52.3, 2063.0], [52.4, 2063.0], [52.5, 2113.0], [52.6, 2113.0], [52.7, 2114.0], [52.8, 2132.0], [52.9, 2132.0], [53.0, 2138.0], [53.1, 2138.0], [53.2, 2144.0], [53.3, 2151.0], [53.4, 2151.0], [53.5, 2154.0], [53.6, 2154.0], [53.7, 2155.0], [53.8, 2155.0], [53.9, 2155.0], [54.0, 2187.0], [54.1, 2187.0], [54.2, 2190.0], [54.3, 2190.0], [54.4, 2199.0], [54.5, 2203.0], [54.6, 2203.0], [54.7, 2212.0], [54.8, 2212.0], [54.9, 2217.0], [55.0, 2218.0], [55.1, 2218.0], [55.2, 2219.0], [55.3, 2219.0], [55.4, 2219.0], [55.5, 2226.0], [55.6, 2226.0], [55.7, 2228.0], [55.8, 2228.0], [55.9, 2232.0], [56.0, 2232.0], [56.1, 2240.0], [56.2, 2243.0], [56.3, 2243.0], [56.4, 2254.0], [56.5, 2254.0], [56.6, 2256.0], [56.7, 2260.0], [56.8, 2260.0], [56.9, 2269.0], [57.0, 2269.0], [57.1, 2273.0], [57.2, 2278.0], [57.3, 2278.0], [57.4, 2280.0], [57.5, 2280.0], [57.6, 2284.0], [57.7, 2286.0], [57.8, 2286.0], [57.9, 2299.0], [58.0, 2299.0], [58.1, 2323.0], [58.2, 2323.0], [58.3, 2329.0], [58.4, 2335.0], [58.5, 2335.0], [58.6, 2336.0], [58.7, 2336.0], [58.8, 2338.0], [58.9, 2348.0], [59.0, 2348.0], [59.1, 2350.0], [59.2, 2350.0], [59.3, 2364.0], [59.4, 2370.0], [59.5, 2370.0], [59.6, 2391.0], [59.7, 2391.0], [59.8, 2394.0], [59.9, 2394.0], [60.0, 2394.0], [60.1, 2409.0], [60.2, 2409.0], [60.3, 2435.0], [60.4, 2435.0], [60.5, 2437.0], [60.6, 2443.0], [60.7, 2443.0], [60.8, 2445.0], [60.9, 2445.0], [61.0, 2445.0], [61.1, 2449.0], [61.2, 2449.0], [61.3, 2452.0], [61.4, 2452.0], [61.5, 2460.0], [61.6, 2463.0], [61.7, 2463.0], [61.8, 2464.0], [61.9, 2464.0], [62.0, 2466.0], [62.1, 2467.0], [62.2, 2467.0], [62.3, 2477.0], [62.4, 2477.0], [62.5, 2477.0], [62.6, 2477.0], [62.7, 2480.0], [62.8, 2482.0], [62.9, 2482.0], [63.0, 2484.0], [63.1, 2484.0], [63.2, 2490.0], [63.3, 2491.0], [63.4, 2491.0], [63.5, 2498.0], [63.6, 2498.0], [63.7, 2499.0], [63.8, 2501.0], [63.9, 2501.0], [64.0, 2503.0], [64.1, 2503.0], [64.2, 2508.0], [64.3, 2509.0], [64.4, 2509.0], [64.5, 2511.0], [64.6, 2511.0], [64.7, 2512.0], [64.8, 2512.0], [64.9, 2515.0], [65.0, 2518.0], [65.1, 2518.0], [65.2, 2518.0], [65.3, 2518.0], [65.4, 2520.0], [65.5, 2524.0], [65.6, 2524.0], [65.7, 2529.0], [65.8, 2529.0], [65.9, 2543.0], [66.0, 2545.0], [66.1, 2545.0], [66.2, 2547.0], [66.3, 2547.0], [66.4, 2551.0], [66.5, 2558.0], [66.6, 2558.0], [66.7, 2579.0], [66.8, 2579.0], [66.9, 2586.0], [67.0, 2586.0], [67.1, 2589.0], [67.2, 2589.0], [67.3, 2589.0], [67.4, 2589.0], [67.5, 2589.0], [67.6, 2594.0], [67.7, 2632.0], [67.8, 2632.0], [67.9, 2640.0], [68.0, 2640.0], [68.1, 2644.0], [68.2, 2658.0], [68.3, 2658.0], [68.4, 2666.0], [68.5, 2666.0], [68.6, 2666.0], [68.7, 2671.0], [68.8, 2671.0], [68.9, 2678.0], [69.0, 2678.0], [69.1, 2703.0], [69.2, 2703.0], [69.3, 2714.0], [69.4, 2723.0], [69.5, 2723.0], [69.6, 2727.0], [69.7, 2727.0], [69.8, 2736.0], [69.9, 2768.0], [70.0, 2768.0], [70.1, 2774.0], [70.2, 2774.0], [70.3, 2779.0], [70.4, 2781.0], [70.5, 2781.0], [70.6, 2795.0], [70.7, 2795.0], [70.8, 2804.0], [70.9, 2808.0], [71.0, 2808.0], [71.1, 2809.0], [71.2, 2809.0], [71.3, 2817.0], [71.4, 2817.0], [71.5, 2826.0], [71.6, 2826.0], [71.7, 2826.0], [71.8, 2857.0], [71.9, 2857.0], [72.0, 2859.0], [72.1, 2864.0], [72.2, 2864.0], [72.3, 2866.0], [72.4, 2866.0], [72.5, 2872.0], [72.6, 2875.0], [72.7, 2875.0], [72.8, 2879.0], [72.9, 2879.0], [73.0, 2914.0], [73.1, 2927.0], [73.2, 2927.0], [73.3, 2966.0], [73.4, 2966.0], [73.5, 2973.0], [73.6, 2973.0], [73.7, 3000.0], [73.8, 3028.0], [73.9, 3028.0], [74.0, 3029.0], [74.1, 3029.0], [74.2, 3029.0], [74.3, 3035.0], [74.4, 3035.0], [74.5, 3037.0], [74.6, 3037.0], [74.7, 3047.0], [74.8, 3059.0], [74.9, 3059.0], [75.0, 3070.0], [75.1, 3070.0], [75.2, 3084.0], [75.3, 3098.0], [75.4, 3098.0], [75.5, 3105.0], [75.6, 3105.0], [75.7, 3117.0], [75.8, 3117.0], [75.9, 3136.0], [76.0, 3143.0], [76.1, 3143.0], [76.2, 3160.0], [76.3, 3160.0], [76.4, 3168.0], [76.5, 3175.0], [76.6, 3175.0], [76.7, 3176.0], [76.8, 3176.0], [76.9, 3182.0], [77.0, 3190.0], [77.1, 3190.0], [77.2, 3191.0], [77.3, 3191.0], [77.4, 3191.0], [77.5, 3193.0], [77.6, 3193.0], [77.7, 3210.0], [77.8, 3210.0], [77.9, 3218.0], [78.0, 3218.0], [78.1, 3220.0], [78.2, 3224.0], [78.3, 3224.0], [78.4, 3224.0], [78.5, 3224.0], [78.6, 3231.0], [78.7, 3251.0], [78.8, 3251.0], [78.9, 3253.0], [79.0, 3253.0], [79.1, 3254.0], [79.2, 3271.0], [79.3, 3271.0], [79.4, 3278.0], [79.5, 3278.0], [79.6, 3296.0], [79.7, 3304.0], [79.8, 3304.0], [79.9, 3305.0], [80.0, 3305.0], [80.1, 3307.0], [80.2, 3307.0], [80.3, 3327.0], [80.4, 3341.0], [80.5, 3341.0], [80.6, 3344.0], [80.7, 3344.0], [80.8, 3367.0], [80.9, 3382.0], [81.0, 3382.0], [81.1, 3384.0], [81.2, 3384.0], [81.3, 3407.0], [81.4, 3408.0], [81.5, 3408.0], [81.6, 3425.0], [81.7, 3425.0], [81.8, 3426.0], [81.9, 3427.0], [82.0, 3427.0], [82.1, 3431.0], [82.2, 3431.0], [82.3, 3452.0], [82.4, 3452.0], [82.5, 3453.0], [82.6, 3474.0], [82.7, 3474.0], [82.8, 3493.0], [82.9, 3493.0], [83.0, 3508.0], [83.1, 3517.0], [83.2, 3517.0], [83.3, 3523.0], [83.4, 3523.0], [83.5, 3526.0], [83.6, 3527.0], [83.7, 3527.0], [83.8, 3540.0], [83.9, 3540.0], [84.0, 3541.0], [84.1, 3558.0], [84.2, 3558.0], [84.3, 3580.0], [84.4, 3580.0], [84.5, 3595.0], [84.6, 3595.0], [84.7, 3601.0], [84.8, 3644.0], [84.9, 3644.0], [85.0, 3650.0], [85.1, 3650.0], [85.2, 3667.0], [85.3, 3674.0], [85.4, 3674.0], [85.5, 3679.0], [85.6, 3679.0], [85.7, 3686.0], [85.8, 3733.0], [85.9, 3733.0], [86.0, 3736.0], [86.1, 3736.0], [86.2, 3737.0], [86.3, 3740.0], [86.4, 3740.0], [86.5, 3743.0], [86.6, 3743.0], [86.7, 3750.0], [86.8, 3750.0], [86.9, 3755.0], [87.0, 3756.0], [87.1, 3756.0], [87.2, 3817.0], [87.3, 3817.0], [87.4, 3827.0], [87.5, 3889.0], [87.6, 3889.0], [87.7, 3894.0], [87.8, 3894.0], [87.9, 3896.0], [88.0, 3898.0], [88.1, 3898.0], [88.2, 3920.0], [88.3, 3920.0], [88.4, 3922.0], [88.5, 3927.0], [88.6, 3927.0], [88.7, 3929.0], [88.8, 3929.0], [88.9, 3952.0], [89.0, 3952.0], [89.1, 3957.0], [89.2, 3960.0], [89.3, 3960.0], [89.4, 3972.0], [89.5, 3972.0], [89.6, 3979.0], [89.7, 3993.0], [89.8, 3993.0], [89.9, 3994.0], [90.0, 3994.0], [90.1, 4008.0], [90.2, 4023.0], [90.3, 4023.0], [90.4, 4025.0], [90.5, 4025.0], [90.6, 4030.0], [90.7, 4036.0], [90.8, 4036.0], [90.9, 4039.0], [91.0, 4039.0], [91.1, 4129.0], [91.2, 4129.0], [91.3, 4133.0], [91.4, 4136.0], [91.5, 4136.0], [91.6, 4137.0], [91.7, 4137.0], [91.8, 4142.0], [91.9, 4153.0], [92.0, 4153.0], [92.1, 4163.0], [92.2, 4163.0], [92.3, 4168.0], [92.4, 4180.0], [92.5, 4180.0], [92.6, 4183.0], [92.7, 4183.0], [92.8, 4189.0], [92.9, 4258.0], [93.0, 4258.0], [93.1, 4289.0], [93.2, 4289.0], [93.3, 4298.0], [93.4, 4298.0], [93.5, 4304.0], [93.6, 4340.0], [93.7, 4340.0], [93.8, 4373.0], [93.9, 4373.0], [94.0, 4376.0], [94.1, 4385.0], [94.2, 4385.0], [94.3, 4393.0], [94.4, 4393.0], [94.5, 4397.0], [94.6, 4399.0], [94.7, 4399.0], [94.8, 4410.0], [94.9, 4410.0], [95.0, 4424.0], [95.1, 4438.0], [95.2, 4438.0], [95.3, 4480.0], [95.4, 4480.0], [95.5, 4532.0], [95.6, 4532.0], [95.7, 4572.0], [95.8, 4575.0], [95.9, 4575.0], [96.0, 4599.0], [96.1, 4599.0], [96.2, 4620.0], [96.3, 4641.0], [96.4, 4641.0], [96.5, 4659.0], [96.6, 4659.0], [96.7, 4666.0], [96.8, 4675.0], [96.9, 4675.0], [97.0, 4684.0], [97.1, 4684.0], [97.2, 4700.0], [97.3, 4780.0], [97.4, 4780.0], [97.5, 4820.0], [97.6, 4820.0], [97.7, 4861.0], [97.8, 4861.0], [97.9, 5040.0], [98.0, 5043.0], [98.1, 5043.0], [98.2, 5096.0], [98.3, 5096.0], [98.4, 5097.0], [98.5, 5159.0], [98.6, 5159.0], [98.7, 5202.0], [98.8, 5202.0], [98.9, 5242.0], [99.0, 5251.0], [99.1, 5251.0], [99.2, 5289.0], [99.3, 5289.0], [99.4, 5443.0], [99.5, 5574.0], [99.6, 5574.0], [99.7, 5686.0], [99.8, 5686.0], [99.9, 5960.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[0.0, 104.0], [0.1, 104.0], [0.2, 105.0], [0.3, 105.0], [0.4, 107.0], [0.5, 107.0], [0.6, 108.0], [0.7, 108.0], [0.8, 108.0], [0.9, 112.0], [1.0, 112.0], [1.1, 112.0], [1.2, 112.0], [1.3, 112.0], [1.4, 113.0], [1.5, 113.0], [1.6, 113.0], [1.7, 113.0], [1.8, 115.0], [1.9, 115.0], [2.0, 116.0], [2.1, 117.0], [2.2, 117.0], [2.3, 118.0], [2.4, 118.0], [2.5, 120.0], [2.6, 120.0], [2.7, 120.0], [2.8, 121.0], [2.9, 121.0], [3.0, 122.0], [3.1, 122.0], [3.2, 123.0], [3.3, 124.0], [3.4, 124.0], [3.5, 125.0], [3.6, 125.0], [3.7, 126.0], [3.8, 126.0], [3.9, 128.0], [4.0, 128.0], [4.1, 128.0], [4.2, 129.0], [4.3, 129.0], [4.4, 129.0], [4.5, 132.0], [4.6, 132.0], [4.7, 134.0], [4.8, 134.0], [4.9, 139.0], [5.0, 139.0], [5.1, 142.0], [5.2, 144.0], [5.3, 144.0], [5.4, 148.0], [5.5, 148.0], [5.6, 148.0], [5.7, 148.0], [5.8, 149.0], [5.9, 150.0], [6.0, 150.0], [6.1, 157.0], [6.2, 157.0], [6.3, 158.0], [6.4, 158.0], [6.5, 159.0], [6.6, 161.0], [6.7, 161.0], [6.8, 162.0], [6.9, 162.0], [7.0, 164.0], [7.1, 171.0], [7.2, 171.0], [7.3, 178.0], [7.4, 178.0], [7.5, 178.0], [7.6, 178.0], [7.7, 206.0], [7.8, 211.0], [7.9, 211.0], [8.0, 238.0], [8.1, 238.0], [8.2, 256.0], [8.3, 256.0], [8.4, 308.0], [8.5, 323.0], [8.6, 323.0], [8.7, 326.0], [8.8, 326.0], [8.9, 328.0], [9.0, 339.0], [9.1, 339.0], [9.2, 340.0], [9.3, 340.0], [9.4, 352.0], [9.5, 352.0], [9.6, 361.0], [9.7, 364.0], [9.8, 364.0], [9.9, 365.0], [10.0, 365.0], [10.1, 367.0], [10.2, 367.0], [10.3, 378.0], [10.4, 440.0], [10.5, 440.0], [10.6, 448.0], [10.7, 448.0], [10.8, 474.0], [10.9, 475.0], [11.0, 475.0], [11.1, 478.0], [11.2, 478.0], [11.3, 498.0], [11.4, 498.0], [11.5, 499.0], [11.6, 501.0], [11.7, 501.0], [11.8, 507.0], [11.9, 507.0], [12.0, 513.0], [12.1, 513.0], [12.2, 731.0], [12.3, 733.0], [12.4, 733.0], [12.5, 753.0], [12.6, 753.0], [12.7, 784.0], [12.8, 784.0], [12.9, 811.0], [13.0, 847.0], [13.1, 847.0], [13.2, 848.0], [13.3, 848.0], [13.4, 872.0], [13.5, 898.0], [13.6, 898.0], [13.7, 914.0], [13.8, 914.0], [13.9, 927.0], [14.0, 927.0], [14.1, 929.0], [14.2, 942.0], [14.3, 942.0], [14.4, 965.0], [14.5, 965.0], [14.6, 1009.0], [14.7, 1009.0], [14.8, 1011.0], [14.9, 1017.0], [15.0, 1017.0], [15.1, 1019.0], [15.2, 1019.0], [15.3, 1032.0], [15.4, 1035.0], [15.5, 1035.0], [15.6, 1037.0], [15.7, 1037.0], [15.8, 1074.0], [15.9, 1074.0], [16.0, 1104.0], [16.1, 1125.0], [16.2, 1125.0], [16.3, 1129.0], [16.4, 1129.0], [16.5, 1139.0], [16.6, 1139.0], [16.7, 1149.0], [16.8, 1156.0], [16.9, 1156.0], [17.0, 1157.0], [17.1, 1157.0], [17.2, 1158.0], [17.3, 1158.0], [17.4, 1180.0], [17.5, 1199.0], [17.6, 1199.0], [17.7, 1204.0], [17.8, 1204.0], [17.9, 1206.0], [18.0, 1214.0], [18.1, 1214.0], [18.2, 1222.0], [18.3, 1222.0], [18.4, 1246.0], [18.5, 1246.0], [18.6, 1269.0], [18.7, 1276.0], [18.8, 1276.0], [18.9, 1303.0], [19.0, 1303.0], [19.1, 1310.0], [19.2, 1310.0], [19.3, 1310.0], [19.4, 1333.0], [19.5, 1333.0], [19.6, 1333.0], [19.7, 1333.0], [19.8, 1334.0], [19.9, 1335.0], [20.0, 1335.0], [20.1, 1339.0], [20.2, 1339.0], [20.3, 1339.0], [20.4, 1339.0], [20.5, 1352.0], [20.6, 1353.0], [20.7, 1353.0], [20.8, 1358.0], [20.9, 1358.0], [21.0, 1361.0], [21.1, 1361.0], [21.2, 1362.0], [21.3, 1365.0], [21.4, 1365.0], [21.5, 1366.0], [21.6, 1366.0], [21.7, 1378.0], [21.8, 1384.0], [21.9, 1384.0], [22.0, 1386.0], [22.1, 1386.0], [22.2, 1386.0], [22.3, 1386.0], [22.4, 1386.0], [22.5, 1388.0], [22.6, 1388.0], [22.7, 1395.0], [22.8, 1395.0], [22.9, 1396.0], [23.0, 1396.0], [23.1, 1403.0], [23.2, 1405.0], [23.3, 1405.0], [23.4, 1406.0], [23.5, 1406.0], [23.6, 1410.0], [23.7, 1410.0], [23.8, 1413.0], [23.9, 1415.0], [24.0, 1415.0], [24.1, 1422.0], [24.2, 1422.0], [24.3, 1423.0], [24.4, 1425.0], [24.5, 1425.0], [24.6, 1428.0], [24.7, 1428.0], [24.8, 1433.0], [24.9, 1433.0], [25.0, 1435.0], [25.1, 1438.0], [25.2, 1438.0], [25.3, 1439.0], [25.4, 1439.0], [25.5, 1442.0], [25.6, 1442.0], [25.7, 1444.0], [25.8, 1445.0], [25.9, 1445.0], [26.0, 1453.0], [26.1, 1453.0], [26.2, 1454.0], [26.3, 1456.0], [26.4, 1456.0], [26.5, 1468.0], [26.6, 1468.0], [26.7, 1471.0], [26.8, 1471.0], [26.9, 1473.0], [27.0, 1478.0], [27.1, 1478.0], [27.2, 1482.0], [27.3, 1482.0], [27.4, 1486.0], [27.5, 1486.0], [27.6, 1487.0], [27.7, 1487.0], [27.8, 1487.0], [27.9, 1499.0], [28.0, 1499.0], [28.1, 1500.0], [28.2, 1500.0], [28.3, 1501.0], [28.4, 1502.0], [28.5, 1502.0], [28.6, 1502.0], [28.7, 1502.0], [28.8, 1506.0], [28.9, 1516.0], [29.0, 1516.0], [29.1, 1521.0], [29.2, 1521.0], [29.3, 1522.0], [29.4, 1522.0], [29.5, 1527.0], [29.6, 1527.0], [29.7, 1527.0], [29.8, 1528.0], [29.9, 1528.0], [30.0, 1531.0], [30.1, 1531.0], [30.2, 1532.0], [30.3, 1541.0], [30.4, 1541.0], [30.5, 1548.0], [30.6, 1548.0], [30.7, 1551.0], [30.8, 1552.0], [30.9, 1552.0], [31.0, 1555.0], [31.1, 1555.0], [31.2, 1562.0], [31.3, 1562.0], [31.4, 1563.0], [31.5, 1567.0], [31.6, 1567.0], [31.7, 1582.0], [31.8, 1582.0], [31.9, 1589.0], [32.0, 1589.0], [32.1, 1593.0], [32.2, 1597.0], [32.3, 1597.0], [32.4, 1599.0], [32.5, 1599.0], [32.6, 1612.0], [32.7, 1629.0], [32.8, 1629.0], [32.9, 1632.0], [33.0, 1632.0], [33.1, 1641.0], [33.2, 1641.0], [33.3, 1642.0], [33.4, 1653.0], [33.5, 1653.0], [33.6, 1655.0], [33.7, 1655.0], [33.8, 1657.0], [33.9, 1657.0], [34.0, 1664.0], [34.1, 1666.0], [34.2, 1666.0], [34.3, 1670.0], [34.4, 1670.0], [34.5, 1681.0], [34.6, 1681.0], [34.7, 1682.0], [34.8, 1688.0], [34.9, 1688.0], [35.0, 1690.0], [35.1, 1690.0], [35.2, 1690.0], [35.3, 1690.0], [35.4, 1690.0], [35.5, 1693.0], [35.6, 1693.0], [35.7, 1693.0], [35.8, 1693.0], [35.9, 1696.0], [36.0, 1709.0], [36.1, 1709.0], [36.2, 1721.0], [36.3, 1721.0], [36.4, 1726.0], [36.5, 1726.0], [36.6, 1730.0], [36.7, 1736.0], [36.8, 1736.0], [36.9, 1739.0], [37.0, 1739.0], [37.1, 1745.0], [37.2, 1746.0], [37.3, 1746.0], [37.4, 1747.0], [37.5, 1747.0], [37.6, 1749.0], [37.7, 1749.0], [37.8, 1750.0], [37.9, 1765.0], [38.0, 1765.0], [38.1, 1779.0], [38.2, 1779.0], [38.3, 1780.0], [38.4, 1780.0], [38.5, 1782.0], [38.6, 1791.0], [38.7, 1791.0], [38.8, 1797.0], [38.9, 1797.0], [39.0, 1800.0], [39.1, 1800.0], [39.2, 1803.0], [39.3, 1814.0], [39.4, 1814.0], [39.5, 1819.0], [39.6, 1819.0], [39.7, 1823.0], [39.8, 1829.0], [39.9, 1829.0], [40.0, 1830.0], [40.1, 1830.0], [40.2, 1834.0], [40.3, 1834.0], [40.4, 1835.0], [40.5, 1842.0], [40.6, 1842.0], [40.7, 1844.0], [40.8, 1844.0], [40.9, 1851.0], [41.0, 1851.0], [41.1, 1852.0], [41.2, 1863.0], [41.3, 1863.0], [41.4, 1868.0], [41.5, 1868.0], [41.6, 1868.0], [41.7, 1877.0], [41.8, 1877.0], [41.9, 1879.0], [42.0, 1879.0], [42.1, 1881.0], [42.2, 1881.0], [42.3, 1889.0], [42.4, 1904.0], [42.5, 1904.0], [42.6, 1915.0], [42.7, 1915.0], [42.8, 1917.0], [42.9, 1917.0], [43.0, 1935.0], [43.1, 1939.0], [43.2, 1939.0], [43.3, 1946.0], [43.4, 1946.0], [43.5, 1947.0], [43.6, 1952.0], [43.7, 1952.0], [43.8, 1970.0], [43.9, 1970.0], [44.0, 1971.0], [44.1, 1971.0], [44.2, 1972.0], [44.3, 1975.0], [44.4, 1975.0], [44.5, 1989.0], [44.6, 1989.0], [44.7, 1989.0], [44.8, 1989.0], [44.9, 1991.0], [45.0, 1999.0], [45.1, 1999.0], [45.2, 2009.0], [45.3, 2009.0], [45.4, 2016.0], [45.5, 2016.0], [45.6, 2019.0], [45.7, 2019.0], [45.8, 2019.0], [45.9, 2025.0], [46.0, 2025.0], [46.1, 2028.0], [46.2, 2029.0], [46.3, 2029.0], [46.4, 2035.0], [46.5, 2035.0], [46.6, 2039.0], [46.7, 2039.0], [46.8, 2047.0], [46.9, 2053.0], [47.0, 2053.0], [47.1, 2059.0], [47.2, 2059.0], [47.3, 2060.0], [47.4, 2060.0], [47.5, 2069.0], [47.6, 2069.0], [47.7, 2069.0], [47.8, 2070.0], [47.9, 2070.0], [48.0, 2074.0], [48.1, 2080.0], [48.2, 2080.0], [48.3, 2087.0], [48.4, 2087.0], [48.5, 2089.0], [48.6, 2089.0], [48.7, 2090.0], [48.8, 2091.0], [48.9, 2091.0], [49.0, 2099.0], [49.1, 2099.0], [49.2, 2120.0], [49.3, 2120.0], [49.4, 2125.0], [49.5, 2128.0], [49.6, 2128.0], [49.7, 2133.0], [49.8, 2133.0], [49.9, 2143.0], [50.0, 2153.0], [50.1, 2153.0], [50.2, 2157.0], [50.3, 2157.0], [50.4, 2163.0], [50.5, 2163.0], [50.6, 2168.0], [50.7, 2180.0], [50.8, 2180.0], [50.9, 2189.0], [51.0, 2189.0], [51.1, 2199.0], [51.2, 2199.0], [51.3, 2207.0], [51.4, 2208.0], [51.5, 2208.0], [51.6, 2213.0], [51.7, 2213.0], [51.8, 2231.0], [51.9, 2231.0], [52.0, 2262.0], [52.1, 2266.0], [52.2, 2266.0], [52.3, 2266.0], [52.4, 2266.0], [52.5, 2272.0], [52.6, 2272.0], [52.7, 2272.0], [52.8, 2275.0], [52.9, 2275.0], [53.0, 2276.0], [53.1, 2276.0], [53.2, 2278.0], [53.3, 2289.0], [53.4, 2289.0], [53.5, 2291.0], [53.6, 2291.0], [53.7, 2304.0], [53.8, 2304.0], [53.9, 2310.0], [54.0, 2320.0], [54.1, 2320.0], [54.2, 2330.0], [54.3, 2330.0], [54.4, 2342.0], [54.5, 2343.0], [54.6, 2343.0], [54.7, 2344.0], [54.8, 2344.0], [54.9, 2355.0], [55.0, 2355.0], [55.1, 2367.0], [55.2, 2387.0], [55.3, 2387.0], [55.4, 2392.0], [55.5, 2392.0], [55.6, 2398.0], [55.7, 2398.0], [55.8, 2399.0], [55.9, 2406.0], [56.0, 2406.0], [56.1, 2416.0], [56.2, 2416.0], [56.3, 2427.0], [56.4, 2427.0], [56.5, 2435.0], [56.6, 2435.0], [56.7, 2435.0], [56.8, 2440.0], [56.9, 2440.0], [57.0, 2444.0], [57.1, 2451.0], [57.2, 2451.0], [57.3, 2452.0], [57.4, 2452.0], [57.5, 2461.0], [57.6, 2461.0], [57.7, 2468.0], [57.8, 2476.0], [57.9, 2476.0], [58.0, 2477.0], [58.1, 2477.0], [58.2, 2498.0], [58.3, 2498.0], [58.4, 2499.0], [58.5, 2501.0], [58.6, 2501.0], [58.7, 2506.0], [58.8, 2506.0], [58.9, 2507.0], [59.0, 2510.0], [59.1, 2510.0], [59.2, 2518.0], [59.3, 2518.0], [59.4, 2522.0], [59.5, 2522.0], [59.6, 2522.0], [59.7, 2526.0], [59.8, 2526.0], [59.9, 2531.0], [60.0, 2531.0], [60.1, 2533.0], [60.2, 2533.0], [60.3, 2548.0], [60.4, 2549.0], [60.5, 2549.0], [60.6, 2552.0], [60.7, 2552.0], [60.8, 2563.0], [60.9, 2567.0], [61.0, 2567.0], [61.1, 2576.0], [61.2, 2576.0], [61.3, 2577.0], [61.4, 2577.0], [61.5, 2578.0], [61.6, 2580.0], [61.7, 2580.0], [61.8, 2590.0], [61.9, 2590.0], [62.0, 2604.0], [62.1, 2604.0], [62.2, 2607.0], [62.3, 2612.0], [62.4, 2612.0], [62.5, 2625.0], [62.6, 2625.0], [62.7, 2634.0], [62.8, 2634.0], [62.9, 2636.0], [63.0, 2643.0], [63.1, 2643.0], [63.2, 2645.0], [63.3, 2645.0], [63.4, 2646.0], [63.5, 2651.0], [63.6, 2651.0], [63.7, 2655.0], [63.8, 2655.0], [63.9, 2688.0], [64.0, 2688.0], [64.1, 2692.0], [64.2, 2697.0], [64.3, 2697.0], [64.4, 2702.0], [64.5, 2702.0], [64.6, 2707.0], [64.7, 2707.0], [64.8, 2710.0], [64.9, 2717.0], [65.0, 2717.0], [65.1, 2717.0], [65.2, 2717.0], [65.3, 2719.0], [65.4, 2719.0], [65.5, 2719.0], [65.6, 2727.0], [65.7, 2727.0], [65.8, 2744.0], [65.9, 2744.0], [66.0, 2748.0], [66.1, 2753.0], [66.2, 2753.0], [66.3, 2759.0], [66.4, 2759.0], [66.5, 2771.0], [66.6, 2771.0], [66.7, 2782.0], [66.8, 2793.0], [66.9, 2793.0], [67.0, 2800.0], [67.1, 2800.0], [67.2, 2819.0], [67.3, 2819.0], [67.4, 2826.0], [67.5, 2836.0], [67.6, 2836.0], [67.7, 2841.0], [67.8, 2841.0], [67.9, 2843.0], [68.0, 2844.0], [68.1, 2844.0], [68.2, 2862.0], [68.3, 2862.0], [68.4, 2862.0], [68.5, 2862.0], [68.6, 2867.0], [68.7, 2878.0], [68.8, 2878.0], [68.9, 2895.0], [69.0, 2895.0], [69.1, 2934.0], [69.2, 2934.0], [69.3, 2938.0], [69.4, 2971.0], [69.5, 2971.0], [69.6, 2977.0], [69.7, 2977.0], [69.8, 2981.0], [69.9, 2982.0], [70.0, 2982.0], [70.1, 2983.0], [70.2, 2983.0], [70.3, 2985.0], [70.4, 2985.0], [70.5, 2987.0], [70.6, 2989.0], [70.7, 2989.0], [70.8, 3001.0], [70.9, 3001.0], [71.0, 3010.0], [71.1, 3010.0], [71.2, 3046.0], [71.3, 3048.0], [71.4, 3048.0], [71.5, 3051.0], [71.6, 3051.0], [71.7, 3065.0], [71.8, 3072.0], [71.9, 3072.0], [72.0, 3089.0], [72.1, 3089.0], [72.2, 3091.0], [72.3, 3091.0], [72.4, 3093.0], [72.5, 3097.0], [72.6, 3097.0], [72.7, 3106.0], [72.8, 3106.0], [72.9, 3133.0], [73.0, 3133.0], [73.1, 3134.0], [73.2, 3142.0], [73.3, 3142.0], [73.4, 3147.0], [73.5, 3147.0], [73.6, 3156.0], [73.7, 3156.0], [73.8, 3163.0], [73.9, 3174.0], [74.0, 3174.0], [74.1, 3179.0], [74.2, 3179.0], [74.3, 3189.0], [74.4, 3191.0], [74.5, 3191.0], [74.6, 3193.0], [74.7, 3193.0], [74.8, 3197.0], [74.9, 3197.0], [75.0, 3198.0], [75.1, 3212.0], [75.2, 3212.0], [75.3, 3239.0], [75.4, 3239.0], [75.5, 3245.0], [75.6, 3245.0], [75.7, 3247.0], [75.8, 3249.0], [75.9, 3249.0], [76.0, 3253.0], [76.1, 3253.0], [76.2, 3253.0], [76.3, 3254.0], [76.4, 3254.0], [76.5, 3260.0], [76.6, 3260.0], [76.7, 3262.0], [76.8, 3262.0], [76.9, 3275.0], [77.0, 3295.0], [77.1, 3295.0], [77.2, 3299.0], [77.3, 3299.0], [77.4, 3308.0], [77.5, 3308.0], [77.6, 3310.0], [77.7, 3311.0], [77.8, 3311.0], [77.9, 3312.0], [78.0, 3312.0], [78.1, 3316.0], [78.2, 3316.0], [78.3, 3316.0], [78.4, 3327.0], [78.5, 3327.0], [78.6, 3334.0], [78.7, 3334.0], [78.8, 3364.0], [78.9, 3380.0], [79.0, 3380.0], [79.1, 3397.0], [79.2, 3397.0], [79.3, 3409.0], [79.4, 3409.0], [79.5, 3413.0], [79.6, 3429.0], [79.7, 3429.0], [79.8, 3436.0], [79.9, 3436.0], [80.0, 3440.0], [80.1, 3440.0], [80.2, 3442.0], [80.3, 3445.0], [80.4, 3445.0], [80.5, 3464.0], [80.6, 3464.0], [80.7, 3473.0], [80.8, 3484.0], [80.9, 3484.0], [81.0, 3497.0], [81.1, 3497.0], [81.2, 3501.0], [81.3, 3501.0], [81.4, 3503.0], [81.5, 3515.0], [81.6, 3515.0], [81.7, 3523.0], [81.8, 3523.0], [81.9, 3531.0], [82.0, 3531.0], [82.1, 3553.0], [82.2, 3562.0], [82.3, 3562.0], [82.4, 3576.0], [82.5, 3576.0], [82.6, 3579.0], [82.7, 3583.0], [82.8, 3583.0], [82.9, 3584.0], [83.0, 3584.0], [83.1, 3587.0], [83.2, 3587.0], [83.3, 3610.0], [83.4, 3622.0], [83.5, 3622.0], [83.6, 3624.0], [83.7, 3624.0], [83.8, 3629.0], [83.9, 3629.0], [84.0, 3638.0], [84.1, 3662.0], [84.2, 3662.0], [84.3, 3679.0], [84.4, 3679.0], [84.5, 3698.0], [84.6, 3698.0], [84.7, 3704.0], [84.8, 3715.0], [84.9, 3715.0], [85.0, 3717.0], [85.1, 3717.0], [85.2, 3731.0], [85.3, 3793.0], [85.4, 3793.0], [85.5, 3799.0], [85.6, 3799.0], [85.7, 3807.0], [85.8, 3807.0], [85.9, 3857.0], [86.0, 3883.0], [86.1, 3883.0], [86.2, 3888.0], [86.3, 3888.0], [86.4, 3902.0], [86.5, 3902.0], [86.6, 3904.0], [86.7, 3932.0], [86.8, 3932.0], [86.9, 3958.0], [87.0, 3958.0], [87.1, 3961.0], [87.2, 3964.0], [87.3, 3964.0], [87.4, 3968.0], [87.5, 3968.0], [87.6, 3975.0], [87.7, 3975.0], [87.8, 4003.0], [87.9, 4013.0], [88.0, 4013.0], [88.1, 4015.0], [88.2, 4015.0], [88.3, 4019.0], [88.4, 4019.0], [88.5, 4023.0], [88.6, 4041.0], [88.7, 4041.0], [88.8, 4044.0], [88.9, 4044.0], [89.0, 4080.0], [89.1, 4080.0], [89.2, 4082.0], [89.3, 4097.0], [89.4, 4097.0], [89.5, 4123.0], [89.6, 4123.0], [89.7, 4124.0], [89.8, 4139.0], [89.9, 4139.0], [90.0, 4154.0], [90.1, 4154.0], [90.2, 4163.0], [90.3, 4163.0], [90.4, 4201.0], [90.5, 4209.0], [90.6, 4209.0], [90.7, 4211.0], [90.8, 4211.0], [90.9, 4256.0], [91.0, 4256.0], [91.1, 4267.0], [91.2, 4267.0], [91.3, 4267.0], [91.4, 4297.0], [91.5, 4297.0], [91.6, 4303.0], [91.7, 4316.0], [91.8, 4316.0], [91.9, 4325.0], [92.0, 4325.0], [92.1, 4328.0], [92.2, 4328.0], [92.3, 4353.0], [92.4, 4371.0], [92.5, 4371.0], [92.6, 4376.0], [92.7, 4376.0], [92.8, 4396.0], [92.9, 4396.0], [93.0, 4411.0], [93.1, 4411.0], [93.2, 4411.0], [93.3, 4485.0], [93.4, 4485.0], [93.5, 4502.0], [93.6, 4561.0], [93.7, 4561.0], [93.8, 4568.0], [93.9, 4568.0], [94.0, 4598.0], [94.1, 4598.0], [94.2, 4637.0], [94.3, 4647.0], [94.4, 4647.0], [94.5, 4657.0], [94.6, 4657.0], [94.7, 4684.0], [94.8, 4684.0], [94.9, 4703.0], [95.0, 4706.0], [95.1, 4706.0], [95.2, 4707.0], [95.3, 4707.0], [95.4, 4758.0], [95.5, 4758.0], [95.6, 4772.0], [95.7, 4774.0], [95.8, 4774.0], [95.9, 4799.0], [96.0, 4799.0], [96.1, 4848.0], [96.2, 4872.0], [96.3, 4872.0], [96.4, 4930.0], [96.5, 4930.0], [96.6, 4944.0], [96.7, 4944.0], [96.8, 4987.0], [96.9, 5008.0], [97.0, 5008.0], [97.1, 5039.0], [97.2, 5039.0], [97.3, 5049.0], [97.4, 5049.0], [97.5, 5095.0], [97.6, 5116.0], [97.7, 5116.0], [97.8, 5155.0], [97.9, 5155.0], [98.0, 5194.0], [98.1, 5226.0], [98.2, 5226.0], [98.3, 5273.0], [98.4, 5273.0], [98.5, 5277.0], [98.6, 5277.0], [98.7, 5299.0], [98.8, 5437.0], [98.9, 5437.0], [99.0, 5537.0], [99.1, 5537.0], [99.2, 5682.0], [99.3, 5682.0], [99.4, 5759.0], [99.5, 5819.0], [99.6, 5819.0], [99.7, 6035.0], [99.8, 6035.0], [99.9, 6147.0], [100.0, 6147.0]], "isOverall": false, "label": "UpdateUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 44.0, "series": [{"data": [[0.0, 12.0], [600.0, 1.0], [700.0, 2.0], [800.0, 2.0], [900.0, 3.0], [1000.0, 8.0], [1100.0, 11.0], [1200.0, 11.0], [1300.0, 19.0], [1400.0, 26.0], [1500.0, 22.0], [1600.0, 24.0], [1700.0, 16.0], [1800.0, 17.0], [1900.0, 21.0], [2000.0, 22.0], [2100.0, 10.0], [2200.0, 12.0], [2300.0, 15.0], [2400.0, 26.0], [2500.0, 22.0], [2600.0, 13.0], [2800.0, 8.0], [2700.0, 15.0], [2900.0, 9.0], [3000.0, 10.0], [3100.0, 6.0], [3200.0, 12.0], [3300.0, 9.0], [3400.0, 14.0], [3500.0, 15.0], [3700.0, 8.0], [3600.0, 6.0], [3800.0, 6.0], [3900.0, 9.0], [4000.0, 9.0], [4200.0, 9.0], [4300.0, 7.0], [4100.0, 9.0], [4400.0, 9.0], [4600.0, 4.0], [4500.0, 3.0], [4700.0, 4.0], [4800.0, 3.0], [5000.0, 4.0], [5100.0, 3.0], [4900.0, 3.0], [5300.0, 1.0], [5200.0, 2.0], [5400.0, 4.0], [5500.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [100.0, 27.0], [200.0, 6.0], [300.0, 4.0], [400.0, 11.0], [500.0, 4.0]], "isOverall": false, "label": "deleting user", "isController": false}, {"data": [[600.0, 7.0], [700.0, 3.0], [800.0, 8.0], [900.0, 10.0], [1000.0, 5.0], [1100.0, 2.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 7.0], [1700.0, 8.0], [1800.0, 3.0], [1900.0, 6.0], [2000.0, 2.0], [2100.0, 8.0], [2300.0, 10.0], [2200.0, 12.0], [2400.0, 6.0], [2500.0, 16.0], [2600.0, 9.0], [2700.0, 8.0], [2800.0, 11.0], [2900.0, 6.0], [3000.0, 11.0], [3100.0, 13.0], [3300.0, 10.0], [3200.0, 7.0], [3400.0, 8.0], [3500.0, 3.0], [3600.0, 10.0], [3700.0, 11.0], [3800.0, 5.0], [3900.0, 8.0], [4000.0, 10.0], [4200.0, 11.0], [4300.0, 14.0], [4100.0, 8.0], [4600.0, 10.0], [4500.0, 16.0], [4400.0, 5.0], [4800.0, 22.0], [4700.0, 7.0], [4900.0, 10.0], [5100.0, 8.0], [5000.0, 13.0], [5200.0, 8.0], [5300.0, 4.0], [5400.0, 9.0], [5500.0, 4.0], [5600.0, 10.0], [5700.0, 7.0], [5800.0, 5.0], [5900.0, 6.0], [6100.0, 3.0], [6000.0, 7.0], [6200.0, 6.0], [6300.0, 8.0], [6400.0, 6.0], [6500.0, 6.0], [6600.0, 9.0], [6900.0, 5.0], [6800.0, 9.0], [6700.0, 5.0], [7000.0, 6.0], [7100.0, 7.0], [7300.0, 5.0], [7200.0, 8.0], [7400.0, 2.0], [7600.0, 6.0], [7500.0, 5.0], [7700.0, 3.0], [7900.0, 3.0], [7800.0, 3.0], [8100.0, 4.0], [8000.0, 2.0], [8500.0, 2.0], [8300.0, 5.0], [8700.0, 2.0], [8400.0, 2.0], [8200.0, 2.0], [9200.0, 1.0], [9100.0, 1.0], [9500.0, 1.0], [9400.0, 1.0], [100.0, 14.0], [200.0, 16.0], [300.0, 14.0], [400.0, 5.0], [500.0, 5.0]], "isOverall": false, "label": "ReadUsers", "isController": false}, {"data": [[0.0, 36.0], [600.0, 1.0], [700.0, 9.0], [800.0, 8.0], [900.0, 8.0], [1000.0, 6.0], [1100.0, 8.0], [1200.0, 15.0], [1300.0, 35.0], [1400.0, 26.0], [1500.0, 16.0], [1600.0, 29.0], [1700.0, 16.0], [1800.0, 26.0], [1900.0, 19.0], [2000.0, 14.0], [2100.0, 12.0], [2300.0, 12.0], [2200.0, 21.0], [2400.0, 22.0], [2500.0, 23.0], [2600.0, 8.0], [2700.0, 10.0], [2800.0, 13.0], [2900.0, 4.0], [3000.0, 11.0], [3100.0, 13.0], [3200.0, 12.0], [3300.0, 9.0], [3400.0, 10.0], [3500.0, 10.0], [3600.0, 7.0], [3700.0, 8.0], [3800.0, 6.0], [3900.0, 11.0], [4000.0, 6.0], [4300.0, 8.0], [4100.0, 11.0], [4200.0, 3.0], [4500.0, 4.0], [4400.0, 4.0], [4600.0, 6.0], [4700.0, 2.0], [4800.0, 2.0], [5000.0, 4.0], [5100.0, 1.0], [5200.0, 4.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [5900.0, 1.0], [100.0, 12.0], [200.0, 11.0], [300.0, 6.0], [400.0, 9.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[700.0, 4.0], [800.0, 5.0], [900.0, 5.0], [1000.0, 8.0], [1100.0, 10.0], [1200.0, 7.0], [1300.0, 24.0], [1400.0, 29.0], [1500.0, 26.0], [1600.0, 20.0], [1700.0, 17.0], [1800.0, 20.0], [1900.0, 16.0], [2000.0, 23.0], [2100.0, 12.0], [2300.0, 13.0], [2200.0, 14.0], [2400.0, 15.0], [2500.0, 20.0], [2600.0, 14.0], [2700.0, 15.0], [2800.0, 12.0], [2900.0, 10.0], [3000.0, 11.0], [3100.0, 14.0], [3300.0, 11.0], [3200.0, 13.0], [3400.0, 11.0], [3500.0, 12.0], [3700.0, 6.0], [3600.0, 8.0], [3800.0, 4.0], [3900.0, 8.0], [4000.0, 10.0], [4200.0, 7.0], [4100.0, 5.0], [4300.0, 8.0], [4400.0, 3.0], [4500.0, 4.0], [4600.0, 4.0], [4700.0, 7.0], [4800.0, 2.0], [4900.0, 3.0], [5100.0, 3.0], [5000.0, 4.0], [5200.0, 4.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [100.0, 44.0], [200.0, 4.0], [300.0, 12.0], [400.0, 7.0], [500.0, 3.0]], "isOverall": false, "label": "UpdateUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 217.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1585.0, "series": [{"data": [[0.0, 217.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 304.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1585.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 254.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5, "minX": 1.61064696E12, "maxY": 50.0, "series": [{"data": [[1.61064708E12, 47.70867430441897], [1.61064702E12, 50.0], [1.61064714E12, 2.5], [1.61064696E12, 37.66889185580776]], "isOverall": false, "label": "Load Test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61064714E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 56.0, "minX": 1.0, "maxY": 5949.0, "series": [{"data": [[32.0, 1574.5], [33.0, 2701.5], [34.0, 1533.5], [36.0, 678.0], [37.0, 731.0], [39.0, 973.0], [40.0, 810.0], [41.0, 881.0], [42.0, 2827.0], [44.0, 2282.333333333333], [45.0, 5949.0], [46.0, 1044.0], [48.0, 1067.6666666666667], [49.0, 2566.5], [50.0, 2658.2054507337516], [9.0, 135.8], [10.0, 147.0], [11.0, 147.0], [12.0, 154.0], [13.0, 117.125], [14.0, 1835.0], [15.0, 175.5], [16.0, 96.5], [17.0, 105.28571428571429], [18.0, 1010.25], [20.0, 881.5], [21.0, 139.0], [22.0, 651.5], [23.0, 993.2857142857142], [24.0, 234.0], [25.0, 4354.0], [26.0, 553.0], [27.0, 561.0], [28.0, 359.3333333333333], [30.0, 387.0], [31.0, 412.5]], "isOverall": false, "label": "deleting user", "isController": false}, {"data": [[45.979020979021, 2373.9125874125853]], "isOverall": false, "label": "deleting user-Aggregated", "isController": false}, {"data": [[2.0, 3056.5], [3.0, 3005.5], [4.0, 3053.0], [5.0, 2683.0], [6.0, 2519.0], [7.0, 2558.5], [8.0, 2844.5], [9.0, 2596.5], [10.0, 1718.5], [11.0, 1143.1666666666665], [12.0, 3106.5], [13.0, 4322.5], [14.0, 1753.0], [15.0, 1257.0], [16.0, 2941.0], [17.0, 4181.5], [18.0, 2316.0], [19.0, 348.5], [20.0, 2197.4], [21.0, 501.3333333333333], [22.0, 3345.6666666666665], [23.0, 507.5], [24.0, 548.0], [25.0, 637.6], [26.0, 2608.25], [27.0, 760.0], [28.0, 882.6666666666666], [29.0, 2792.0], [30.0, 837.0], [31.0, 791.3333333333334], [32.0, 868.0], [33.0, 945.0], [34.0, 929.5], [36.0, 2199.333333333333], [37.0, 978.6666666666666], [38.0, 1093.0], [39.0, 1311.0], [40.0, 2614.4], [41.0, 3324.333333333333], [42.0, 4280.0], [43.0, 4436.5], [44.0, 1628.5], [45.0, 1637.0], [46.0, 3364.333333333333], [47.0, 4178.0], [48.0, 3763.2], [49.0, 3745.0], [50.0, 4621.150627615063], [1.0, 5696.0]], "isOverall": false, "label": "ReadUsers", "isController": false}, {"data": [[44.239095315024244, 4052.053311793215]], "isOverall": false, "label": "ReadUsers-Aggregated", "isController": false}, {"data": [[32.0, 422.6666666666667], [33.0, 427.0], [34.0, 1910.3333333333333], [37.0, 1719.0], [38.0, 2189.0], [39.0, 5202.0], [40.0, 780.0], [41.0, 766.75], [42.0, 818.0], [43.0, 2147.0], [44.0, 1796.5], [45.0, 2125.333333333333], [46.0, 914.0], [47.0, 969.0], [3.0, 62.0], [48.0, 3241.6666666666665], [49.0, 964.5], [50.0, 2486.978991596638], [4.0, 68.0], [5.0, 85.0], [6.0, 78.0], [7.0, 57.0], [8.0, 66.0], [9.0, 65.0], [10.0, 56.0], [11.0, 63.50000000000001], [12.0, 63.0], [13.0, 83.5], [15.0, 96.75], [16.0, 56.57142857142858], [17.0, 101.5], [18.0, 86.0], [19.0, 1073.6666666666665], [20.0, 94.0], [21.0, 1007.6666666666666], [22.0, 180.5], [23.0, 170.0], [24.0, 1980.5], [26.0, 462.0], [27.0, 349.6], [28.0, 1127.2], [29.0, 287.25], [30.0, 1779.6666666666667], [31.0, 4641.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[45.52791878172587, 2173.445008460236]], "isOverall": false, "label": "CreateUser-Aggregated", "isController": false}, {"data": [[32.0, 491.0], [33.0, 486.0], [34.0, 2625.0], [35.0, 4799.0], [36.0, 742.0], [37.0, 784.0], [38.0, 3016.0], [39.0, 847.5], [41.0, 811.0], [42.0, 2807.75], [43.0, 927.0], [44.0, 1037.0], [45.0, 3329.1666666666665], [46.0, 992.0], [47.0, 1020.3333333333334], [49.0, 2124.333333333333], [48.0, 4328.0], [50.0, 2596.088235294118], [4.0, 121.0], [5.0, 115.0], [6.0, 149.0], [7.0, 124.0], [8.0, 161.0], [9.0, 144.0], [10.0, 117.0], [11.0, 112.0], [12.0, 120.5], [13.0, 144.5], [14.0, 110.0], [16.0, 115.0], [17.0, 133.28571428571428], [18.0, 110.5], [20.0, 251.0], [21.0, 144.2857142857143], [22.0, 176.25], [23.0, 256.0], [24.0, 1568.3333333333333], [25.0, 4303.0], [26.0, 507.0], [27.0, 2578.0], [28.0, 345.5], [29.0, 321.25], [30.0, 367.75], [31.0, 417.3333333333333]], "isOverall": false, "label": "UpdateUser", "isController": false}, {"data": [[45.99134948096882, 2307.525951557095]], "isOverall": false, "label": "UpdateUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12.2, "minX": 1.61064696E12, "maxY": 27454.316666666666, "series": [{"data": [[1.61064708E12, 27454.316666666666], [1.61064702E12, 27227.716666666667], [1.61064714E12, 684.2], [1.61064696E12, 10415.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61064708E12, 2189.616666666667], [1.61064702E12, 3586.0666666666666], [1.61064714E12, 12.2], [1.61064696E12, 2686.9333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61064714E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 845.3489583333333, "minX": 1.61064696E12, "maxY": 6748.674698795178, "series": [{"data": [[1.61064708E12, 3757.1342281879197], [1.61064702E12, 2530.8725099601606], [1.61064696E12, 946.6046511627904]], "isOverall": false, "label": "deleting user", "isController": false}, {"data": [[1.61064708E12, 6748.674698795178], [1.61064702E12, 4312.344129554655], [1.61064714E12, 5867.5], [1.61064696E12, 1481.7920792079215]], "isOverall": false, "label": "ReadUsers", "isController": false}, {"data": [[1.61064708E12, 3640.033783783784], [1.61064702E12, 2324.597609561751], [1.61064696E12, 845.3489583333333]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.61064708E12, 3758.5878378378393], [1.61064702E12, 2461.858299595141], [1.61064696E12, 925.6830601092894]], "isOverall": false, "label": "UpdateUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61064714E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 371.2267441860464, "minX": 1.61064696E12, "maxY": 6748.409638554216, "series": [{"data": [[1.61064708E12, 1557.530201342282], [1.61064702E12, 1052.2151394422312], [1.61064696E12, 371.2267441860464]], "isOverall": false, "label": "deleting user", "isController": false}, {"data": [[1.61064708E12, 6748.409638554216], [1.61064702E12, 4312.174089068825], [1.61064714E12, 5867.0], [1.61064696E12, 1481.3514851485147]], "isOverall": false, "label": "ReadUsers", "isController": false}, {"data": [[1.61064708E12, 3639.8513513513503], [1.61064702E12, 2324.402390438247], [1.61064696E12, 844.9739583333337]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.61064708E12, 3758.418918918918], [1.61064702E12, 2461.639676113359], [1.61064696E12, 925.2459016393443]], "isOverall": false, "label": "UpdateUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61064714E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61064696E12, "maxY": 0.8415841584158419, "series": [{"data": [[1.61064708E12, 0.0], [1.61064702E12, 0.0], [1.61064696E12, 0.0]], "isOverall": false, "label": "deleting user", "isController": false}, {"data": [[1.61064708E12, 0.6686746987951808], [1.61064702E12, 0.6761133603238864], [1.61064714E12, 0.25], [1.61064696E12, 0.8415841584158419]], "isOverall": false, "label": "ReadUsers", "isController": false}, {"data": [[1.61064708E12, 0.0], [1.61064702E12, 0.0], [1.61064696E12, 0.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.61064708E12, 0.0], [1.61064702E12, 0.0], [1.61064696E12, 0.0]], "isOverall": false, "label": "UpdateUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61064714E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.61064696E12, "maxY": 9590.0, "series": [{"data": [[1.61064708E12, 9590.0], [1.61064702E12, 7035.0], [1.61064714E12, 5968.0], [1.61064696E12, 2986.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61064708E12, 7223.0], [1.61064702E12, 4676.400000000001], [1.61064714E12, 5968.0], [1.61064696E12, 2219.2000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61064708E12, 8759.279999999999], [1.61064702E12, 6300.43], [1.61064714E12, 5968.0], [1.61064696E12, 2809.879999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61064708E12, 7826.199999999998], [1.61064702E12, 5073.15], [1.61064714E12, 5968.0], [1.61064696E12, 2537.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61064708E12, 1426.0], [1.61064702E12, 108.0], [1.61064714E12, 5696.0], [1.61064696E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61064708E12, 4328.0], [1.61064702E12, 2718.0], [1.61064714E12, 5903.0], [1.61064696E12, 1156.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61064714E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 70.0, "minX": 1.0, "maxY": 8066.5, "series": [{"data": [[33.0, 2080.0], [32.0, 1333.5], [2.0, 8066.5], [35.0, 510.5], [34.0, 848.0], [41.0, 445.0], [3.0, 4826.0], [51.0, 386.0], [57.0, 134.5], [65.0, 157.0], [4.0, 6076.0], [5.0, 5349.5], [6.0, 4285.5], [7.0, 3847.5], [8.0, 4280.5], [9.0, 4340.0], [10.0, 3899.0], [11.0, 3138.0], [12.0, 3717.0], [13.0, 3417.0], [14.0, 4710.5], [15.0, 3593.0], [16.0, 3904.0], [1.0, 5696.0], [17.0, 2937.0], [18.0, 2857.0], [19.0, 3737.0], [20.0, 2771.0], [21.0, 2625.0], [22.0, 1892.5], [23.0, 2062.0], [24.0, 2548.0], [25.0, 1938.5], [26.0, 3698.0], [27.0, 4203.0], [28.0, 1504.5], [29.0, 1435.0], [30.0, 2452.5], [31.0, 1462.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 1984.0], [32.0, 1283.0], [35.0, 435.0], [34.0, 740.0], [41.0, 188.5], [3.0, 2640.0], [51.0, 326.0], [57.0, 70.0], [65.0, 87.0], [4.0, 4454.0], [5.0, 3203.0], [6.0, 2409.0], [7.0, 4108.0], [8.0, 2737.0], [9.0, 4336.0], [10.0, 2746.5], [11.0, 2356.5], [12.0, 3282.0], [13.0, 2548.0], [14.0, 4694.5], [15.0, 2806.0], [16.0, 3945.0], [17.0, 2449.0], [18.0, 2695.0], [19.0, 1968.5], [20.0, 3219.5], [21.0, 2445.0], [22.0, 1814.0], [23.0, 2040.0], [24.0, 2398.0], [25.0, 1112.0], [26.0, 3704.0], [27.0, 4186.0], [28.0, 1457.5], [29.0, 1383.0], [30.0, 1657.5], [31.0, 1412.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 65.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 70.0, "minX": 1.0, "maxY": 8066.0, "series": [{"data": [[33.0, 1960.0], [32.0, 1299.0], [2.0, 8066.0], [35.0, 501.5], [34.0, 810.0], [41.0, 418.0], [3.0, 4826.0], [51.0, 363.0], [57.0, 115.0], [65.0, 137.5], [4.0, 6075.0], [5.0, 5349.0], [6.0, 4285.5], [7.0, 3769.5], [8.0, 3762.5], [9.0, 4294.0], [10.0, 3650.0], [11.0, 3048.0], [12.0, 3296.0], [13.0, 2653.0], [14.0, 4710.5], [15.0, 3281.5], [16.0, 2275.0], [1.0, 5695.0], [17.0, 2936.0], [18.0, 2803.0], [19.0, 2934.0], [20.0, 2316.0], [21.0, 2490.0], [22.0, 1805.0], [23.0, 1964.0], [24.0, 2437.0], [25.0, 1841.5], [26.0, 3312.0], [27.0, 4140.0], [28.0, 1449.0], [29.0, 1425.0], [30.0, 2340.0], [31.0, 1389.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 1984.0], [32.0, 1282.5], [35.0, 434.0], [34.0, 740.0], [41.0, 188.0], [3.0, 2640.0], [51.0, 325.0], [57.0, 70.0], [65.0, 87.0], [4.0, 4453.0], [5.0, 3203.0], [6.0, 2409.0], [7.0, 4108.0], [8.0, 2736.0], [9.0, 4336.0], [10.0, 2746.0], [11.0, 2356.5], [12.0, 3281.0], [13.0, 2547.0], [14.0, 4694.5], [15.0, 2806.0], [16.0, 3945.0], [17.0, 2449.0], [18.0, 2694.0], [19.0, 1968.5], [20.0, 3219.0], [21.0, 2444.0], [22.0, 1814.0], [23.0, 2039.0], [24.0, 2398.0], [25.0, 1112.0], [26.0, 3704.0], [27.0, 4185.0], [28.0, 1457.5], [29.0, 1383.0], [30.0, 1657.0], [31.0, 1411.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 65.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.416666666666666, "minX": 1.61064696E12, "maxY": 16.616666666666667, "series": [{"data": [[1.61064708E12, 9.416666666666666], [1.61064702E12, 16.616666666666667], [1.61064696E12, 13.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61064708E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61064696E12, "maxY": 4.183333333333334, "series": [{"data": [[1.61064708E12, 2.7666666666666666], [1.61064702E12, 4.116666666666666], [1.61064714E12, 0.06666666666666667], [1.61064696E12, 3.3666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61064708E12, 2.466666666666667], [1.61064702E12, 4.183333333333334], [1.61064696E12, 3.2]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.61064708E12, 2.466666666666667], [1.61064702E12, 4.116666666666666], [1.61064696E12, 3.05]], "isOverall": false, "label": "202", "isController": false}, {"data": [[1.61064708E12, 1.1], [1.61064702E12, 1.8333333333333333], [1.61064696E12, 1.3]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.61064708E12, 1.3833333333333333], [1.61064702E12, 2.35], [1.61064696E12, 1.5666666666666667]], "isOverall": false, "label": "204", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61064714E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61064696E12, "maxY": 4.183333333333334, "series": [{"data": [[1.61064708E12, 2.466666666666667], [1.61064702E12, 4.183333333333334], [1.61064696E12, 3.2]], "isOverall": false, "label": "CreateUser-success", "isController": false}, {"data": [[1.61064708E12, 2.7666666666666666], [1.61064702E12, 4.116666666666666], [1.61064714E12, 0.06666666666666667], [1.61064696E12, 3.3666666666666667]], "isOverall": false, "label": "ReadUsers-success", "isController": false}, {"data": [[1.61064708E12, 1.1], [1.61064702E12, 1.8333333333333333], [1.61064696E12, 1.3]], "isOverall": false, "label": "deleting user-failure", "isController": false}, {"data": [[1.61064708E12, 1.3833333333333333], [1.61064702E12, 2.35], [1.61064696E12, 1.5666666666666667]], "isOverall": false, "label": "deleting user-success", "isController": false}, {"data": [[1.61064708E12, 2.466666666666667], [1.61064702E12, 4.116666666666666], [1.61064696E12, 3.05]], "isOverall": false, "label": "UpdateUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61064714E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61064696E12, "maxY": 14.766666666666667, "series": [{"data": [[1.61064708E12, 9.083333333333334], [1.61064702E12, 14.766666666666667], [1.61064714E12, 0.06666666666666667], [1.61064696E12, 11.183333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61064708E12, 1.1], [1.61064702E12, 1.8333333333333333], [1.61064696E12, 1.3]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61064714E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

